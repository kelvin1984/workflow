{"version":3,"file":"index.min.js","sources":["../src/browser.ts","../src/props.ts","../src/ponyfills.ts","../src/constants.ts","../src/bindGlobalEventListeners.ts","../src/reference.ts","../src/utils.ts","../src/popper.ts","../src/createTippy.ts","../src/index.ts","../src/group.ts"],"sourcesContent":["export const isBrowser =\r\n  typeof window !== 'undefined' && typeof document !== 'undefined'\r\n\r\nconst ua = isBrowser ? navigator.userAgent : ''\r\n\r\nexport const isIE = /MSIE |Trident\\//.test(ua)\r\nexport const isUCBrowser = /UCBrowser\\//.test(ua)\r\nexport const isIOS =\r\n  isBrowser &&\r\n  /iPhone|iPad|iPod/.test(navigator.platform) &&\r\n  !(window as any).MSStream\r\n","import { Props } from './types'\r\n\r\nexport const defaultProps: Props = {\r\n  a11y: true,\r\n  allowHTML: true,\r\n  animateFill: true,\r\n  animation: 'shift-away',\r\n  appendTo: () => document.body,\r\n  aria: 'describedby',\r\n  arrow: false,\r\n  arrowType: 'sharp',\r\n  boundary: 'scrollParent',\r\n  content: '',\r\n  delay: 0,\r\n  distance: 10,\r\n  duration: [325, 275],\r\n  flip: true,\r\n  flipBehavior: 'flip',\r\n  flipOnUpdate: false,\r\n  followCursor: false,\r\n  hideOnClick: true,\r\n  ignoreAttributes: false,\r\n  inertia: false,\r\n  interactive: false,\r\n  interactiveBorder: 2,\r\n  interactiveDebounce: 0,\r\n  lazy: true,\r\n  maxWidth: 350,\r\n  multiple: false,\r\n  offset: 0,\r\n  onHidden() {},\r\n  onHide() {},\r\n  onMount() {},\r\n  onShow() {},\r\n  onShown() {},\r\n  onTrigger() {},\r\n  placement: 'top',\r\n  popperOptions: {},\r\n  role: 'tooltip',\r\n  showOnInit: false,\r\n  size: 'regular',\r\n  sticky: false,\r\n  target: '',\r\n  theme: 'dark',\r\n  touch: true,\r\n  touchHold: false,\r\n  trigger: 'mouseenter focus',\r\n  triggerTarget: null,\r\n  updateDuration: 0,\r\n  wait: null,\r\n  zIndex: 9999,\r\n}\r\n\r\n/**\r\n * If the set() method encounters one of these, the popperInstance must be\r\n * recreated\r\n */\r\nexport const POPPER_INSTANCE_DEPENDENCIES: Array<keyof Props> = [\r\n  'arrow',\r\n  'arrowType',\r\n  'boundary',\r\n  'distance',\r\n  'flip',\r\n  'flipBehavior',\r\n  'flipOnUpdate',\r\n  'offset',\r\n  'placement',\r\n  'popperOptions',\r\n]\r\n","import { isBrowser } from './browser'\r\n\r\nconst elementProto: Record<string, any> = isBrowser ? Element.prototype : {}\r\n\r\nexport const matches =\r\n  elementProto.matches ||\r\n  elementProto.matchesSelector ||\r\n  elementProto.webkitMatchesSelector ||\r\n  elementProto.mozMatchesSelector ||\r\n  elementProto.msMatchesSelector\r\n\r\n/**\r\n * Ponyfill for Array.from - converts iterable values to an array\r\n */\r\nexport function arrayFrom(value: ArrayLike<any>): any[] {\r\n  return [].slice.call(value)\r\n}\r\n\r\n/**\r\n * Ponyfill for Element.prototype.closest\r\n */\r\nexport function closest(element: Element, selector: string): Element | null {\r\n  return closestCallback(element, (el: Element) => matches.call(el, selector))\r\n}\r\n\r\n/**\r\n * Works like Element.prototype.closest, but uses a callback instead\r\n */\r\nexport function closestCallback(\r\n  element: Element | null,\r\n  callback: Function,\r\n): Element | null {\r\n  while (element) {\r\n    if (callback(element)) {\r\n      return element\r\n    }\r\n\r\n    element = element.parentElement\r\n  }\r\n\r\n  return null\r\n}\r\n","// Passive event listener config\r\nexport const PASSIVE = { passive: true }\r\n\r\n// Popper `preventOverflow` padding\r\nexport const PADDING = 4\r\n\r\n// Popper attributes\r\n// In Popper v2 these will be `data-*` instead of `x-*` to adhere to HTML5 spec\r\nexport const PLACEMENT_ATTRIBUTE = 'x-placement'\r\nexport const OUT_OF_BOUNDARIES_ATTRIBUTE = 'x-out-of-boundaries'\r\n\r\n// Classes\r\nexport const IOS_CLASS = `__NAMESPACE_PREFIX__-iOS`\r\nexport const ACTIVE_CLASS = `__NAMESPACE_PREFIX__-active`\r\nexport const POPPER_CLASS = `__NAMESPACE_PREFIX__-popper`\r\nexport const TOOLTIP_CLASS = `__NAMESPACE_PREFIX__-tooltip`\r\nexport const CONTENT_CLASS = `__NAMESPACE_PREFIX__-content`\r\nexport const BACKDROP_CLASS = `__NAMESPACE_PREFIX__-backdrop`\r\nexport const ARROW_CLASS = `__NAMESPACE_PREFIX__-arrow`\r\nexport const ROUND_ARROW_CLASS = `__NAMESPACE_PREFIX__-roundarrow`\r\n\r\n// Selectors\r\nexport const POPPER_SELECTOR = `.${POPPER_CLASS}`\r\nexport const TOOLTIP_SELECTOR = `.${TOOLTIP_CLASS}`\r\nexport const CONTENT_SELECTOR = `.${CONTENT_CLASS}`\r\nexport const BACKDROP_SELECTOR = `.${BACKDROP_CLASS}`\r\nexport const ARROW_SELECTOR = `.${ARROW_CLASS}`\r\nexport const ROUND_ARROW_SELECTOR = `.${ROUND_ARROW_CLASS}`\r\n","import { isIOS } from './browser'\r\nimport { PASSIVE, IOS_CLASS } from './constants'\r\n\r\nexport let isUsingTouch = false\r\n\r\nexport function onDocumentTouch(): void {\r\n  if (isUsingTouch) {\r\n    return\r\n  }\r\n\r\n  isUsingTouch = true\r\n\r\n  if (isIOS) {\r\n    document.body.classList.add(IOS_CLASS)\r\n  }\r\n\r\n  if (window.performance) {\r\n    document.addEventListener('mousemove', onDocumentMouseMove)\r\n  }\r\n}\r\n\r\nlet lastMouseMoveTime = 0\r\nexport function onDocumentMouseMove(): void {\r\n  const now = performance.now()\r\n\r\n  // Chrome 60+ is 1 mousemove per animation frame, use 20ms time difference\r\n  if (now - lastMouseMoveTime < 20) {\r\n    isUsingTouch = false\r\n\r\n    document.removeEventListener('mousemove', onDocumentMouseMove)\r\n\r\n    if (!isIOS) {\r\n      document.body.classList.remove(IOS_CLASS)\r\n    }\r\n  }\r\n\r\n  lastMouseMoveTime = now\r\n}\r\n\r\nexport function onWindowBlur(): void {\r\n  const { activeElement }: { activeElement: any } = document\r\n\r\n  if (activeElement && activeElement.blur && activeElement._tippy) {\r\n    activeElement.blur()\r\n  }\r\n}\r\n\r\n/**\r\n * Adds the needed global event listeners\r\n */\r\nexport default function bindGlobalEventListeners(): void {\r\n  document.addEventListener('touchstart', onDocumentTouch, PASSIVE)\r\n  window.addEventListener('blur', onWindowBlur)\r\n}\r\n","import { Props, VirtualReference, ReferenceElement } from './types'\r\nimport { defaultProps } from './props'\r\n\r\nconst keys = Object.keys(defaultProps)\r\n\r\n/**\r\n * Returns an object of optional props from data-tippy-* attributes\r\n */\r\nexport function getDataAttributeOptions(\r\n  reference: ReferenceElement | VirtualReference,\r\n): Props {\r\n  return keys.reduce((acc: any, key) => {\r\n    const valueAsString = (\r\n      reference.getAttribute(`data-tippy-${key}`) || ''\r\n    ).trim()\r\n\r\n    if (!valueAsString) {\r\n      return acc\r\n    }\r\n\r\n    if (key === 'content') {\r\n      acc[key] = valueAsString\r\n    } else {\r\n      try {\r\n        acc[key] = JSON.parse(valueAsString)\r\n      } catch (e) {\r\n        acc[key] = valueAsString\r\n      }\r\n    }\r\n\r\n    return acc\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Polyfills the virtual reference (plain object) with Element.prototype props\r\n * Mutating because DOM elements are mutated, adds `_tippy` property\r\n */\r\nexport function polyfillElementPrototypeProperties(\r\n  virtualReference: VirtualReference & Record<string, any>,\r\n): void {\r\n  const polyfills: Record<string, any> = {\r\n    isVirtual: true,\r\n    attributes: virtualReference.attributes || {},\r\n    contains() {},\r\n    setAttribute(key: string, value: any) {\r\n      virtualReference.attributes[key] = value\r\n    },\r\n    getAttribute(key: string) {\r\n      return virtualReference.attributes[key]\r\n    },\r\n    removeAttribute(key: string) {\r\n      delete virtualReference.attributes[key]\r\n    },\r\n    hasAttribute(key: string) {\r\n      return key in virtualReference.attributes\r\n    },\r\n    addEventListener() {},\r\n    removeEventListener() {},\r\n    classList: {\r\n      classNames: {},\r\n      add(key: string) {\r\n        virtualReference.classList.classNames[key] = true\r\n      },\r\n      remove(key: string) {\r\n        delete virtualReference.classList.classNames[key]\r\n      },\r\n      contains(key: string) {\r\n        return key in virtualReference.classList.classNames\r\n      },\r\n    },\r\n  }\r\n\r\n  for (const key in polyfills) {\r\n    virtualReference[key] = polyfills[key]\r\n  }\r\n}\r\n","import {\r\n  Options,\r\n  Props,\r\n  ReferenceElement,\r\n  Targets,\r\n  VirtualReference,\r\n} from './types'\r\nimport { arrayFrom, matches } from './ponyfills'\r\nimport { isUCBrowser } from './browser'\r\nimport { getDataAttributeOptions } from './reference'\r\nimport { POPPER_SELECTOR } from './constants'\r\n\r\n/**\r\n * Determines if a value is a \"bare\" virtual element (before mutations done\r\n * by `polyfillElementPrototypeProperties()`). JSDOM elements show up as\r\n * [object Object], we can check if the value is \"element-like\" if it has\r\n * `addEventListener`\r\n */\r\nexport function isBareVirtualElement(value: any): boolean {\r\n  return (\r\n    {}.toString.call(value) === '[object Object]' && !value.addEventListener\r\n  )\r\n}\r\n\r\n/**\r\n * Determines if the value is a reference element\r\n */\r\nexport function isReferenceElement(value: any): value is ReferenceElement {\r\n  return !!value._tippy && !matches.call(value, POPPER_SELECTOR)\r\n}\r\n\r\n/**\r\n * Safe .hasOwnProperty check, for prototype-less objects\r\n */\r\nexport function hasOwnProperty(obj: object, key: string): boolean {\r\n  return {}.hasOwnProperty.call(obj, key)\r\n}\r\n\r\n/**\r\n * Returns an array of elements based on the value\r\n */\r\nexport function getArrayOfElements(value: Targets): Element[] {\r\n  if (isSingular(value)) {\r\n    // TODO: VirtualReference is not compatible to type Element\r\n    return [value as Element]\r\n  }\r\n\r\n  if (value instanceof NodeList) {\r\n    return arrayFrom(value)\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    return value\r\n  }\r\n\r\n  try {\r\n    return arrayFrom(document.querySelectorAll(value))\r\n  } catch (e) {\r\n    return []\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a value at a given index depending on if it's an array or number\r\n */\r\nexport function getValue(value: any, index: number, defaultValue: any): any {\r\n  if (Array.isArray(value)) {\r\n    const v = value[index]\r\n    return v == null ? defaultValue : v\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n/**\r\n * Debounce utility. To avoid bloating bundle size, we're only passing 1\r\n * argument here, a more generic function would pass all arguments. Only\r\n * `onMouseMove` uses this which takes the event object for now.\r\n */\r\nexport function debounce<T>(\r\n  fn: (arg: T) => void,\r\n  ms: number,\r\n): (arg: T) => void {\r\n  // Avoid wrapping in `setTimeout` if ms is 0 anyway\r\n  if (ms === 0) {\r\n    return fn\r\n  }\r\n\r\n  let timeout: any\r\n\r\n  return (arg): void => {\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout((): void => {\r\n      fn(arg)\r\n    }, ms)\r\n  }\r\n}\r\n\r\n/**\r\n * Prevents errors from being thrown while accessing nested modifier objects\r\n * in `popperOptions`\r\n */\r\nexport function getModifier(obj: any, key: string): any {\r\n  return obj && obj.modifiers && obj.modifiers[key]\r\n}\r\n\r\n/**\r\n * Determines if an array or string includes a value\r\n */\r\nexport function includes(a: any[] | string, b: any): boolean {\r\n  return a.indexOf(b) > -1\r\n}\r\n\r\n/**\r\n * Determines if the value is a real element\r\n */\r\nexport function isRealElement(value: any): value is Element {\r\n  return value instanceof Element\r\n}\r\n\r\n/**\r\n * Determines if the value is singular-like\r\n */\r\nexport function isSingular(value: any): value is VirtualReference | Element {\r\n  return !!(value && hasOwnProperty(value, 'isVirtual')) || isRealElement(value)\r\n}\r\n\r\n/**\r\n * Firefox extensions don't allow setting .innerHTML directly, this will trick it\r\n */\r\nexport function innerHTML(): 'innerHTML' {\r\n  return 'innerHTML'\r\n}\r\n\r\n/**\r\n * Evaluates a function if one, or returns the value\r\n */\r\nexport function invokeWithArgsOrReturn(value: any, args: any[]): any {\r\n  return typeof value === 'function' ? value.apply(null, args) : value\r\n}\r\n\r\n/**\r\n * Sets a popperInstance `flip` modifier's enabled state\r\n */\r\nexport function setFlipModifierEnabled(modifiers: any[], value: any): void {\r\n  modifiers.filter(m => m.name === 'flip')[0].enabled = value\r\n}\r\n\r\n/**\r\n * Determines if an element can receive focus\r\n * Always returns true for virtual objects\r\n */\r\nexport function canReceiveFocus(element: Element | VirtualReference): boolean {\r\n  return isRealElement(element)\r\n    ? matches.call(\r\n        element,\r\n        'a[href],area[href],button,details,input,textarea,select,iframe,[tabindex]',\r\n      ) && !element.hasAttribute('disabled')\r\n    : true\r\n}\r\n\r\n/**\r\n * Returns a new `div` element\r\n */\r\nexport function div(): HTMLDivElement {\r\n  return document.createElement('div')\r\n}\r\n\r\n/**\r\n * Applies a transition duration to a list of elements\r\n */\r\nexport function setTransitionDuration(\r\n  els: (HTMLDivElement | null)[],\r\n  value: number,\r\n): void {\r\n  els.forEach(el => {\r\n    if (el) {\r\n      el.style.transitionDuration = `${value}ms`\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Sets the visibility state to elements so they can begin to transition\r\n */\r\nexport function setVisibilityState(\r\n  els: (HTMLDivElement | null)[],\r\n  state: 'visible' | 'hidden',\r\n): void {\r\n  els.forEach(el => {\r\n    if (el) {\r\n      el.setAttribute('data-state', state)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Evaluates the props object by merging data attributes and\r\n * disabling conflicting options where necessary\r\n */\r\nexport function evaluateProps(\r\n  reference: ReferenceElement | VirtualReference,\r\n  props: Props,\r\n): Props {\r\n  const out = {\r\n    ...props,\r\n    content: invokeWithArgsOrReturn(props.content, [reference]),\r\n    ...(props.ignoreAttributes ? {} : getDataAttributeOptions(reference)),\r\n  }\r\n\r\n  if (out.arrow || isUCBrowser) {\r\n    out.animateFill = false\r\n  }\r\n\r\n  return out\r\n}\r\n\r\n/**\r\n * Validates an object of options with the valid default props object\r\n */\r\nexport function validateOptions(options: Options, defaultProps: Props): void {\r\n  Object.keys(options).forEach(option => {\r\n    if (!hasOwnProperty(defaultProps, option)) {\r\n      throw new Error(`[tippy]: \\`${option}\\` is not a valid option`)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Creates an array from string of values separated by whitespace\r\n */\r\nexport function splitBySpaces(value: string): string[] {\r\n  return value.split(/\\s+/).filter(Boolean)\r\n}\r\n","import {\r\n  PopperElement,\r\n  Props,\r\n  PopperChildren,\r\n  HideAllOptions,\r\n  BasicPlacement,\r\n} from './types'\r\nimport { arrayFrom } from './ponyfills'\r\nimport {\r\n  innerHTML,\r\n  div,\r\n  isReferenceElement,\r\n  isRealElement,\r\n  splitBySpaces,\r\n} from './utils'\r\nimport { isUCBrowser } from './browser'\r\nimport {\r\n  POPPER_CLASS,\r\n  TOOLTIP_CLASS,\r\n  BACKDROP_CLASS,\r\n  CONTENT_CLASS,\r\n  ARROW_CLASS,\r\n  ROUND_ARROW_CLASS,\r\n  POPPER_SELECTOR,\r\n  TOOLTIP_SELECTOR,\r\n  BACKDROP_SELECTOR,\r\n  CONTENT_SELECTOR,\r\n  ARROW_SELECTOR,\r\n  ROUND_ARROW_SELECTOR,\r\n  PLACEMENT_ATTRIBUTE,\r\n} from './constants'\r\n\r\n/**\r\n * Sets the innerHTML of an element\r\n */\r\nexport function setInnerHTML(element: Element, html: string | Element): void {\r\n  element[innerHTML()] = isRealElement(html) ? html[innerHTML()] : html\r\n}\r\n\r\n/**\r\n * Sets the content of a tooltip\r\n */\r\nexport function setContent(\r\n  contentEl: PopperChildren['content'],\r\n  props: Props,\r\n): void {\r\n  if (isRealElement(props.content)) {\r\n    setInnerHTML(contentEl, '')\r\n    contentEl.appendChild(props.content)\r\n  } else if (typeof props.content !== 'function') {\r\n    const key: 'innerHTML' | 'textContent' = props.allowHTML\r\n      ? 'innerHTML'\r\n      : 'textContent'\r\n    contentEl[key] = props.content\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the child elements of a popper element\r\n */\r\nexport function getChildren(popper: PopperElement): PopperChildren {\r\n  return {\r\n    tooltip: popper.querySelector(TOOLTIP_SELECTOR) as HTMLDivElement,\r\n    backdrop: popper.querySelector(BACKDROP_SELECTOR),\r\n    content: popper.querySelector(CONTENT_SELECTOR) as HTMLDivElement,\r\n    arrow:\r\n      popper.querySelector(ARROW_SELECTOR) ||\r\n      popper.querySelector(ROUND_ARROW_SELECTOR),\r\n  }\r\n}\r\n\r\n/**\r\n * Adds `data-inertia` attribute\r\n */\r\nexport function addInertia(tooltip: PopperChildren['tooltip']): void {\r\n  tooltip.setAttribute('data-inertia', '')\r\n}\r\n\r\n/**\r\n * Removes `data-inertia` attribute\r\n */\r\nexport function removeInertia(tooltip: PopperChildren['tooltip']): void {\r\n  tooltip.removeAttribute('data-inertia')\r\n}\r\n\r\n/**\r\n * Creates an arrow element and returns it\r\n */\r\nexport function createArrowElement(\r\n  arrowType: Props['arrowType'],\r\n): HTMLDivElement {\r\n  const arrow = div()\r\n  if (arrowType === 'round') {\r\n    arrow.className = ROUND_ARROW_CLASS\r\n    setInnerHTML(\r\n      arrow,\r\n      '<svg viewBox=\"0 0 18 7\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 7s2.021-.015 5.253-4.218C6.584 1.051 7.797.007 9 0c1.203-.007 2.416 1.035 3.761 2.782C16.012 7.005 18 7 18 7H0z\"/></svg>',\r\n    )\r\n  } else {\r\n    arrow.className = ARROW_CLASS\r\n  }\r\n  return arrow\r\n}\r\n\r\n/**\r\n * Creates a backdrop element and returns it\r\n */\r\nexport function createBackdropElement(): HTMLDivElement {\r\n  const backdrop = div()\r\n  backdrop.className = BACKDROP_CLASS\r\n  backdrop.setAttribute('data-state', 'hidden')\r\n  return backdrop\r\n}\r\n\r\n/**\r\n * Adds interactive-related attributes\r\n */\r\nexport function addInteractive(\r\n  popper: PopperElement,\r\n  tooltip: PopperChildren['tooltip'],\r\n): void {\r\n  popper.setAttribute('tabindex', '-1')\r\n  tooltip.setAttribute('data-interactive', '')\r\n}\r\n\r\n/**\r\n * Removes interactive-related attributes\r\n */\r\nexport function removeInteractive(\r\n  popper: PopperElement,\r\n  tooltip: PopperChildren['tooltip'],\r\n): void {\r\n  popper.removeAttribute('tabindex')\r\n  tooltip.removeAttribute('data-interactive')\r\n}\r\n\r\n/**\r\n * Add/remove transitionend listener from tooltip\r\n */\r\nexport function updateTransitionEndListener(\r\n  tooltip: PopperChildren['tooltip'],\r\n  action: 'add' | 'remove',\r\n  listener: (event: TransitionEvent) => void,\r\n): void {\r\n  // UC Browser hasn't adopted the `transitionend` event despite supporting\r\n  // unprefixed transitions...\r\n  const eventName =\r\n    isUCBrowser && document.body.style.webkitTransition !== undefined\r\n      ? 'webkitTransitionEnd'\r\n      : 'transitionend'\r\n  tooltip[\r\n    (action + 'EventListener') as 'addEventListener' | 'removeEventListener'\r\n  ](eventName, listener as EventListener)\r\n}\r\n\r\n/**\r\n * Returns the popper's placement, ignoring shifting (top-start, etc)\r\n */\r\nexport function getBasicPlacement(popper: PopperElement): BasicPlacement {\r\n  const fullPlacement = popper.getAttribute(PLACEMENT_ATTRIBUTE)\r\n  return (fullPlacement ? fullPlacement.split('-')[0] : '') as BasicPlacement\r\n}\r\n\r\n/**\r\n * Triggers reflow\r\n */\r\nexport function reflow(popper: PopperElement): void {\r\n  void popper.offsetHeight\r\n}\r\n\r\n/**\r\n * Adds/removes theme from tooltip's classList\r\n */\r\nexport function updateTheme(\r\n  tooltip: PopperChildren['tooltip'],\r\n  action: 'add' | 'remove',\r\n  theme: Props['theme'],\r\n): void {\r\n  splitBySpaces(theme).forEach(\r\n    (themeName): void => {\r\n      tooltip.classList[action](themeName + '-theme')\r\n    },\r\n  )\r\n}\r\n\r\n/**\r\n * Constructs the popper element and returns it\r\n */\r\nexport function createPopperElement(id: number, props: Props): PopperElement {\r\n  const popper = div()\r\n  popper.className = POPPER_CLASS\r\n  popper.id = `__NAMESPACE_PREFIX__-${id}`\r\n  popper.style.zIndex = '' + props.zIndex\r\n  popper.style.position = 'absolute'\r\n  popper.style.top = '0'\r\n  popper.style.left = '0'\r\n\r\n  if (props.role) {\r\n    popper.setAttribute('role', props.role)\r\n  }\r\n\r\n  const tooltip = div()\r\n  tooltip.className = TOOLTIP_CLASS\r\n  tooltip.style.maxWidth =\r\n    props.maxWidth + (typeof props.maxWidth === 'number' ? 'px' : '')\r\n  tooltip.setAttribute('data-size', props.size)\r\n  tooltip.setAttribute('data-animation', props.animation)\r\n  tooltip.setAttribute('data-state', 'hidden')\r\n  updateTheme(tooltip, 'add', props.theme)\r\n\r\n  const content = div()\r\n  content.className = CONTENT_CLASS\r\n  content.setAttribute('data-state', 'hidden')\r\n\r\n  if (props.interactive) {\r\n    addInteractive(popper, tooltip)\r\n  }\r\n\r\n  if (props.arrow) {\r\n    tooltip.appendChild(createArrowElement(props.arrowType))\r\n  }\r\n\r\n  if (props.animateFill) {\r\n    tooltip.appendChild(createBackdropElement())\r\n    tooltip.setAttribute('data-animatefill', '')\r\n  }\r\n\r\n  if (props.inertia) {\r\n    addInertia(tooltip)\r\n  }\r\n\r\n  setContent(content, props)\r\n\r\n  tooltip.appendChild(content)\r\n  popper.appendChild(tooltip)\r\n\r\n  return popper\r\n}\r\n\r\n/**\r\n * Updates the popper element based on the new props\r\n */\r\nexport function updatePopperElement(\r\n  popper: PopperElement,\r\n  prevProps: Props,\r\n  nextProps: Props,\r\n): void {\r\n  const { tooltip, content, backdrop, arrow } = getChildren(popper)\r\n\r\n  popper.style.zIndex = '' + nextProps.zIndex\r\n  tooltip.setAttribute('data-size', nextProps.size)\r\n  tooltip.setAttribute('data-animation', nextProps.animation)\r\n  tooltip.style.maxWidth =\r\n    nextProps.maxWidth + (typeof nextProps.maxWidth === 'number' ? 'px' : '')\r\n\r\n  if (nextProps.role) {\r\n    popper.setAttribute('role', nextProps.role)\r\n  } else {\r\n    popper.removeAttribute('role')\r\n  }\r\n\r\n  if (prevProps.content !== nextProps.content) {\r\n    setContent(content, nextProps)\r\n  }\r\n\r\n  // animateFill\r\n  if (!prevProps.animateFill && nextProps.animateFill) {\r\n    tooltip.appendChild(createBackdropElement())\r\n    tooltip.setAttribute('data-animatefill', '')\r\n  } else if (prevProps.animateFill && !nextProps.animateFill) {\r\n    tooltip.removeChild(backdrop!)\r\n    tooltip.removeAttribute('data-animatefill')\r\n  }\r\n\r\n  // arrow\r\n  if (!prevProps.arrow && nextProps.arrow) {\r\n    tooltip.appendChild(createArrowElement(nextProps.arrowType))\r\n  } else if (prevProps.arrow && !nextProps.arrow) {\r\n    tooltip.removeChild(arrow!)\r\n  }\r\n\r\n  // arrowType\r\n  if (\r\n    prevProps.arrow &&\r\n    nextProps.arrow &&\r\n    prevProps.arrowType !== nextProps.arrowType\r\n  ) {\r\n    tooltip.replaceChild(createArrowElement(nextProps.arrowType), arrow!)\r\n  }\r\n\r\n  // interactive\r\n  if (!prevProps.interactive && nextProps.interactive) {\r\n    addInteractive(popper, tooltip)\r\n  } else if (prevProps.interactive && !nextProps.interactive) {\r\n    removeInteractive(popper, tooltip)\r\n  }\r\n\r\n  // inertia\r\n  if (!prevProps.inertia && nextProps.inertia) {\r\n    addInertia(tooltip)\r\n  } else if (prevProps.inertia && !nextProps.inertia) {\r\n    removeInertia(tooltip)\r\n  }\r\n\r\n  // theme\r\n  if (prevProps.theme !== nextProps.theme) {\r\n    updateTheme(tooltip, 'remove', prevProps.theme)\r\n    updateTheme(tooltip, 'add', nextProps.theme)\r\n  }\r\n}\r\n\r\n/**\r\n * Hides all visible poppers on the document\r\n */\r\nexport function hideAll({\r\n  exclude: excludedReferenceOrInstance,\r\n  duration,\r\n}: HideAllOptions = {}): void {\r\n  arrayFrom(document.querySelectorAll(POPPER_SELECTOR)).forEach(\r\n    (popper: PopperElement): void => {\r\n      const instance = popper._tippy\r\n\r\n      if (instance) {\r\n        let isExcluded = false\r\n        if (excludedReferenceOrInstance) {\r\n          isExcluded = isReferenceElement(excludedReferenceOrInstance)\r\n            ? instance.reference === excludedReferenceOrInstance\r\n            : popper === excludedReferenceOrInstance.popper\r\n        }\r\n\r\n        if (!isExcluded) {\r\n          instance.hide(duration)\r\n        }\r\n      }\r\n    },\r\n  )\r\n}\r\n\r\n/**\r\n * Determines if the mouse cursor is outside of the popper's interactive border\r\n * region\r\n */\r\nexport function isCursorOutsideInteractiveBorder(\r\n  popperPlacement: BasicPlacement,\r\n  popperRect: ClientRect,\r\n  event: MouseEvent,\r\n  props: Props,\r\n): boolean {\r\n  if (!popperPlacement) {\r\n    return true\r\n  }\r\n\r\n  const { clientX: x, clientY: y } = event\r\n  const { interactiveBorder, distance } = props\r\n\r\n  const exceedsTop =\r\n    popperRect.top - y >\r\n    (popperPlacement === 'top'\r\n      ? interactiveBorder + distance\r\n      : interactiveBorder)\r\n\r\n  const exceedsBottom =\r\n    y - popperRect.bottom >\r\n    (popperPlacement === 'bottom'\r\n      ? interactiveBorder + distance\r\n      : interactiveBorder)\r\n\r\n  const exceedsLeft =\r\n    popperRect.left - x >\r\n    (popperPlacement === 'left'\r\n      ? interactiveBorder + distance\r\n      : interactiveBorder)\r\n\r\n  const exceedsRight =\r\n    x - popperRect.right >\r\n    (popperPlacement === 'right'\r\n      ? interactiveBorder + distance\r\n      : interactiveBorder)\r\n\r\n  return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight\r\n}\r\n\r\n/**\r\n * Returns the distance offset, taking into account the default offset due to\r\n * the transform: translate() rule (10px) in CSS\r\n */\r\nexport function getOffsetDistanceInPx(distance: number): string {\r\n  return -(distance - 10) + 'px'\r\n}\r\n","import Popper from 'popper.js'\r\nimport {\r\n  ReferenceElement,\r\n  PopperInstance,\r\n  Props,\r\n  Options,\r\n  Instance,\r\n  Content,\r\n  Listener,\r\n  VirtualReference,\r\n} from './types'\r\nimport { isIE } from './browser'\r\nimport { closest, closestCallback, arrayFrom } from './ponyfills'\r\nimport {\r\n  PASSIVE,\r\n  PADDING,\r\n  PLACEMENT_ATTRIBUTE,\r\n  OUT_OF_BOUNDARIES_ATTRIBUTE,\r\n  ACTIVE_CLASS,\r\n  POPPER_SELECTOR,\r\n} from './constants'\r\nimport { isUsingTouch } from './bindGlobalEventListeners'\r\nimport { defaultProps, POPPER_INSTANCE_DEPENDENCIES } from './props'\r\nimport {\r\n  createPopperElement,\r\n  updatePopperElement,\r\n  getChildren,\r\n  getBasicPlacement,\r\n  updateTransitionEndListener,\r\n  isCursorOutsideInteractiveBorder,\r\n  getOffsetDistanceInPx,\r\n  reflow,\r\n} from './popper'\r\nimport {\r\n  hasOwnProperty,\r\n  debounce,\r\n  getValue,\r\n  getModifier,\r\n  includes,\r\n  invokeWithArgsOrReturn,\r\n  setFlipModifierEnabled,\r\n  canReceiveFocus,\r\n  validateOptions,\r\n  evaluateProps,\r\n  setTransitionDuration,\r\n  setVisibilityState,\r\n  isRealElement,\r\n  splitBySpaces,\r\n} from './utils'\r\n\r\nlet idCounter = 1\r\n// Workaround for IE11's lack of new MouseEvent constructor\r\nlet mouseMoveListeners: ((event: MouseEvent) => void)[] = []\r\n\r\n/**\r\n * Creates and returns a Tippy object. We're using a closure pattern instead of\r\n * a class so that the exposed object API is clean without private members\r\n * prefixed with `_`.\r\n */\r\nexport default function createTippy(\r\n  reference: ReferenceElement | VirtualReference,\r\n  collectionProps: Props,\r\n): Instance | null {\r\n  const props = evaluateProps(reference, collectionProps)\r\n\r\n  // If the reference shouldn't have multiple tippys, return null early\r\n  if (!props.multiple && reference._tippy) {\r\n    return null\r\n  }\r\n\r\n  /* ======================= 🔒 Private members 🔒 ======================= */\r\n  let lastTriggerEventType: string\r\n  let lastMouseMoveEvent: MouseEvent\r\n  let showTimeoutId: number\r\n  let hideTimeoutId: number\r\n  let scheduleHideAnimationFrameId: number\r\n  let isScheduledToShow = false\r\n  let isBeingDestroyed = false\r\n  let previousPlacement: string\r\n  let wasVisibleDuringPreviousUpdate = false\r\n  let hasMountCallbackRun = false\r\n  let currentMountCallback: () => void\r\n  let currentTransitionEndListener: (event: TransitionEvent) => void\r\n  let listeners: Listener[] = []\r\n  let currentComputedPadding: {\r\n    top: number\r\n    bottom: number\r\n    left: number\r\n    right: number\r\n    [key: string]: number\r\n  }\r\n  let debouncedOnMouseMove = debounce(onMouseMove, props.interactiveDebounce)\r\n\r\n  /* ======================= 🔑 Public members 🔑 ======================= */\r\n  const id = idCounter++\r\n  const popper = createPopperElement(id, props)\r\n  const popperChildren = getChildren(popper)\r\n  const popperInstance: PopperInstance | null = null\r\n\r\n  const state = {\r\n    // Is the instance currently enabled?\r\n    isEnabled: true,\r\n    // Is the tippy currently showing and not transitioning out?\r\n    isVisible: false,\r\n    // Has the instance been destroyed?\r\n    isDestroyed: false,\r\n    // Is the tippy currently mounted to the DOM?\r\n    isMounted: false,\r\n    // Has the tippy finished transitioning in?\r\n    isShown: false,\r\n  }\r\n\r\n  const instance: Instance = {\r\n    // properties\r\n    id,\r\n    reference,\r\n    popper,\r\n    popperChildren,\r\n    popperInstance,\r\n    props,\r\n    state,\r\n    // methods\r\n    clearDelayTimeouts,\r\n    set,\r\n    setContent,\r\n    show,\r\n    hide,\r\n    enable,\r\n    disable,\r\n    destroy,\r\n  }\r\n\r\n  /* ==================== Initial instance mutations =================== */\r\n  reference._tippy = instance\r\n  popper._tippy = instance\r\n\r\n  addTriggersToReference()\r\n\r\n  if (!props.lazy) {\r\n    createPopperInstance()\r\n  }\r\n\r\n  if (props.showOnInit) {\r\n    scheduleShow()\r\n  }\r\n\r\n  // Ensure the event listeners target can receive focus\r\n  if (\r\n    props.a11y &&\r\n    !props.target &&\r\n    !canReceiveFocus(getEventListenersTarget())\r\n  ) {\r\n    getEventListenersTarget().setAttribute('tabindex', '0')\r\n  }\r\n\r\n  // Prevent a tippy with a delay from hiding if the cursor left then returned\r\n  // before it started hiding\r\n  popper.addEventListener('mouseenter', (event: MouseEvent) => {\r\n    if (\r\n      instance.props.interactive &&\r\n      instance.state.isVisible &&\r\n      lastTriggerEventType === 'mouseenter'\r\n    ) {\r\n      // We don't want props.onTrigger() to be called here, since the `event`\r\n      // object is not related to the reference element\r\n      scheduleShow(event, true)\r\n    }\r\n  })\r\n  popper.addEventListener('mouseleave', () => {\r\n    if (instance.props.interactive && lastTriggerEventType === 'mouseenter') {\r\n      document.addEventListener('mousemove', debouncedOnMouseMove)\r\n    }\r\n  })\r\n\r\n  return instance\r\n\r\n  /* ======================= 🔒 Private methods 🔒 ======================= */\r\n  /**\r\n   * Removes the follow cursor listener\r\n   */\r\n  function removeFollowCursorListener(): void {\r\n    document.removeEventListener(\r\n      'mousemove',\r\n      positionVirtualReferenceNearCursor,\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Cleans up interactive mouse listeners\r\n   */\r\n  function cleanupInteractiveMouseListeners(): void {\r\n    document.body.removeEventListener('mouseleave', scheduleHide)\r\n    document.removeEventListener('mousemove', debouncedOnMouseMove)\r\n    mouseMoveListeners = mouseMoveListeners.filter(\r\n      (listener): boolean => listener !== debouncedOnMouseMove,\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Returns correct target used for event listeners\r\n   */\r\n  function getEventListenersTarget(): ReferenceElement | VirtualReference {\r\n    return instance.props.triggerTarget || reference\r\n  }\r\n\r\n  /**\r\n   * Adds the document click event listener for the instance\r\n   */\r\n  function addDocumentClickListener(): void {\r\n    document.addEventListener('click', onDocumentClick, true)\r\n  }\r\n\r\n  /**\r\n   * Removes the document click event listener for the instance\r\n   */\r\n  function removeDocumentClickListener(): void {\r\n    document.removeEventListener('click', onDocumentClick, true)\r\n  }\r\n\r\n  /**\r\n   * Returns transitionable inner elements used in show/hide methods\r\n   */\r\n  function getTransitionableElements(): (HTMLDivElement | null)[] {\r\n    return [\r\n      instance.popperChildren.tooltip,\r\n      instance.popperChildren.backdrop,\r\n      instance.popperChildren.content,\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Determines if the instance is in `followCursor` mode.\r\n   * NOTE: in v5, touch devices will use `initial` behavior no matter the value.\r\n   */\r\n  function getIsInLooseFollowCursorMode(): boolean {\r\n    const { followCursor } = instance.props\r\n    return (\r\n      (followCursor && lastTriggerEventType !== 'focus') ||\r\n      (isUsingTouch && followCursor === 'initial')\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Updates the tooltip's position on each animation frame\r\n   */\r\n  function makeSticky(): void {\r\n    setTransitionDuration([popper], isIE ? 0 : instance.props.updateDuration)\r\n\r\n    let prevRefRect = reference.getBoundingClientRect()\r\n\r\n    function updatePosition(): void {\r\n      const currentRefRect = reference.getBoundingClientRect()\r\n\r\n      // Only schedule an update if the reference rect has changed\r\n      if (\r\n        prevRefRect.top !== currentRefRect.top ||\r\n        prevRefRect.right !== currentRefRect.right ||\r\n        prevRefRect.bottom !== currentRefRect.bottom ||\r\n        prevRefRect.left !== currentRefRect.left\r\n      ) {\r\n        instance.popperInstance!.scheduleUpdate()\r\n      }\r\n\r\n      prevRefRect = currentRefRect\r\n\r\n      if (instance.state.isMounted) {\r\n        requestAnimationFrame(updatePosition)\r\n      }\r\n    }\r\n\r\n    updatePosition()\r\n  }\r\n\r\n  /**\r\n   * Invokes a callback once the tooltip has fully transitioned out\r\n   */\r\n  function onTransitionedOut(duration: number, callback: () => void): void {\r\n    onTransitionEnd(duration, () => {\r\n      if (\r\n        !instance.state.isVisible &&\r\n        popper.parentNode &&\r\n        popper.parentNode.contains(popper)\r\n      ) {\r\n        callback()\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Invokes a callback once the tooltip has fully transitioned in\r\n   */\r\n  function onTransitionedIn(duration: number, callback: () => void): void {\r\n    onTransitionEnd(duration, callback)\r\n  }\r\n\r\n  /**\r\n   * Invokes a callback once the tooltip's CSS transition ends\r\n   */\r\n  function onTransitionEnd(duration: number, callback: () => void): void {\r\n    const { tooltip } = instance.popperChildren\r\n\r\n    /**\r\n     * Listener added as the `transitionend` handler\r\n     */\r\n    function listener(event: TransitionEvent): void {\r\n      if (event.target === tooltip) {\r\n        updateTransitionEndListener(tooltip, 'remove', listener)\r\n        callback()\r\n      }\r\n    }\r\n\r\n    // Make callback synchronous if duration is 0\r\n    // `transitionend` won't fire otherwise\r\n    if (duration === 0) {\r\n      return callback()\r\n    }\r\n\r\n    updateTransitionEndListener(tooltip, 'remove', currentTransitionEndListener)\r\n    updateTransitionEndListener(tooltip, 'add', listener)\r\n\r\n    currentTransitionEndListener = listener\r\n  }\r\n\r\n  /**\r\n   * Adds an event listener to the reference and stores it in `listeners`\r\n   */\r\n  function on(\r\n    eventType: string,\r\n    handler: EventListener,\r\n    options: boolean | object = false,\r\n  ): void {\r\n    getEventListenersTarget().addEventListener(eventType, handler, options)\r\n    listeners.push({ eventType, handler, options })\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners to the reference based on the `trigger` prop\r\n   */\r\n  function addTriggersToReference(): void {\r\n    if (instance.props.touchHold && !instance.props.target) {\r\n      on('touchstart', onTrigger, PASSIVE)\r\n      on('touchend', onMouseLeave as EventListener, PASSIVE)\r\n    }\r\n\r\n    splitBySpaces(instance.props.trigger).forEach(eventType => {\r\n      if (eventType === 'manual') {\r\n        return\r\n      }\r\n\r\n      // Non-delegates\r\n      if (!instance.props.target) {\r\n        on(eventType, onTrigger)\r\n        switch (eventType) {\r\n          case 'mouseenter':\r\n            on('mouseleave', onMouseLeave as EventListener)\r\n            break\r\n          case 'focus':\r\n            on(isIE ? 'focusout' : 'blur', onBlur as EventListener)\r\n            break\r\n        }\r\n      } else {\r\n        // Delegates\r\n        switch (eventType) {\r\n          case 'mouseenter':\r\n            on('mouseover', onDelegateShow)\r\n            on('mouseout', onDelegateHide)\r\n            break\r\n          case 'focus':\r\n            on('focusin', onDelegateShow)\r\n            on('focusout', onDelegateHide)\r\n            break\r\n          case 'click':\r\n            on(eventType, onDelegateShow)\r\n            break\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Removes event listeners from the reference\r\n   */\r\n  function removeTriggersFromReference(): void {\r\n    listeners.forEach(({ eventType, handler, options }: Listener) => {\r\n      getEventListenersTarget().removeEventListener(eventType, handler, options)\r\n    })\r\n    listeners = []\r\n  }\r\n\r\n  /**\r\n   * Positions the virtual reference near the cursor\r\n   */\r\n  function positionVirtualReferenceNearCursor(event: MouseEvent): void {\r\n    const { clientX: x, clientY: y } = (lastMouseMoveEvent = event)\r\n\r\n    // Gets set once popperInstance `onCreate` has been called\r\n    if (!currentComputedPadding) {\r\n      return\r\n    }\r\n\r\n    // If the instance is interactive, avoid updating the position unless it's\r\n    // over the reference element\r\n    const isCursorOverReference = closestCallback(\r\n      event.target as Element,\r\n      (el: Element): boolean => el === reference,\r\n    )\r\n\r\n    const rect = reference.getBoundingClientRect()\r\n    const { followCursor } = instance.props\r\n    const isHorizontal = followCursor === 'horizontal'\r\n    const isVertical = followCursor === 'vertical'\r\n\r\n    // The virtual reference needs some size to prevent itself from overflowing\r\n    const isVerticalPlacement = includes(\r\n      ['top', 'bottom'],\r\n      getBasicPlacement(popper),\r\n    )\r\n    const fullPlacement = popper.getAttribute(PLACEMENT_ATTRIBUTE)\r\n    const isVariation = fullPlacement ? !!fullPlacement.split('-')[1] : false\r\n    const size = isVerticalPlacement ? popper.offsetWidth : popper.offsetHeight\r\n    const halfSize = size / 2\r\n    const verticalIncrease = isVerticalPlacement\r\n      ? 0\r\n      : isVariation\r\n      ? size\r\n      : halfSize\r\n    const horizontalIncrease = isVerticalPlacement\r\n      ? isVariation\r\n        ? size\r\n        : halfSize\r\n      : 0\r\n\r\n    if (isCursorOverReference || !instance.props.interactive) {\r\n      instance.popperInstance!.reference = {\r\n        ...instance.popperInstance!.reference,\r\n        // This will exist in next Popper.js feature release to fix #532\r\n        // @ts-ignore\r\n        referenceNode: reference,\r\n        // These `client` values don't get used by Popper.js if they are 0\r\n        clientWidth: 0,\r\n        clientHeight: 0,\r\n        getBoundingClientRect: (): DOMRect | ClientRect => ({\r\n          width: isVerticalPlacement ? size : 0,\r\n          height: isVerticalPlacement ? 0 : size,\r\n          top: (isHorizontal ? rect.top : y) - verticalIncrease,\r\n          bottom: (isHorizontal ? rect.bottom : y) + verticalIncrease,\r\n          left: (isVertical ? rect.left : x) - horizontalIncrease,\r\n          right: (isVertical ? rect.right : x) + horizontalIncrease,\r\n        }),\r\n      }\r\n\r\n      instance.popperInstance!.update()\r\n    }\r\n\r\n    if (followCursor === 'initial' && instance.state.isVisible) {\r\n      removeFollowCursorListener()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates the tippy instance for a delegate when it's been triggered\r\n   */\r\n  function createDelegateChildTippy(event?: Event): void {\r\n    if (event) {\r\n      const targetEl: ReferenceElement | null = closest(\r\n        event.target as Element,\r\n        instance.props.target,\r\n      )\r\n\r\n      if (targetEl && !targetEl._tippy) {\r\n        createTippy(targetEl, {\r\n          ...instance.props,\r\n          content: invokeWithArgsOrReturn(collectionProps.content, [targetEl]),\r\n          appendTo: collectionProps.appendTo,\r\n          target: '',\r\n          showOnInit: true,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event listener invoked upon trigger\r\n   */\r\n  function onTrigger(event: Event): void {\r\n    if (!instance.state.isEnabled || isEventListenerStopped(event)) {\r\n      return\r\n    }\r\n\r\n    if (!instance.state.isVisible) {\r\n      lastTriggerEventType = event.type\r\n\r\n      if (event instanceof MouseEvent) {\r\n        lastMouseMoveEvent = event\r\n\r\n        // If scrolling, `mouseenter` events can be fired if the cursor lands\r\n        // over a new target, but `mousemove` events don't get fired. This\r\n        // causes interactive tooltips to get stuck open until the cursor is\r\n        // moved\r\n        mouseMoveListeners.forEach((listener): void => listener(event))\r\n      }\r\n    }\r\n\r\n    // Toggle show/hide when clicking click-triggered tooltips\r\n    if (\r\n      event.type === 'click' &&\r\n      instance.props.hideOnClick !== false &&\r\n      instance.state.isVisible\r\n    ) {\r\n      scheduleHide()\r\n    } else {\r\n      scheduleShow(event)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event listener used for interactive tooltips to detect when they should\r\n   * hide\r\n   */\r\n  function onMouseMove(event: MouseEvent): void {\r\n    const isCursorOverPopper =\r\n      closest(event.target as Element, POPPER_SELECTOR) === popper\r\n    const isCursorOverReference = closestCallback(\r\n      event.target as Element,\r\n      (el: Element) => el === reference,\r\n    )\r\n\r\n    if (isCursorOverPopper || isCursorOverReference) {\r\n      return\r\n    }\r\n\r\n    if (\r\n      isCursorOutsideInteractiveBorder(\r\n        getBasicPlacement(popper),\r\n        popper.getBoundingClientRect(),\r\n        event,\r\n        instance.props,\r\n      )\r\n    ) {\r\n      cleanupInteractiveMouseListeners()\r\n      scheduleHide()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event listener invoked upon mouseleave\r\n   */\r\n  function onMouseLeave(event: MouseEvent): void {\r\n    if (isEventListenerStopped(event)) {\r\n      return\r\n    }\r\n\r\n    if (instance.props.interactive) {\r\n      document.body.addEventListener('mouseleave', scheduleHide)\r\n      document.addEventListener('mousemove', debouncedOnMouseMove)\r\n      mouseMoveListeners.push(debouncedOnMouseMove)\r\n\r\n      return\r\n    }\r\n\r\n    scheduleHide()\r\n  }\r\n\r\n  /**\r\n   * Event listener invoked upon blur\r\n   */\r\n  function onBlur(event: FocusEvent): void {\r\n    if (event.target !== getEventListenersTarget()) {\r\n      return\r\n    }\r\n\r\n    if (\r\n      instance.props.interactive &&\r\n      event.relatedTarget &&\r\n      popper.contains(event.relatedTarget as Element)\r\n    ) {\r\n      return\r\n    }\r\n\r\n    scheduleHide()\r\n  }\r\n\r\n  /**\r\n   * Event listener invoked when a child target is triggered\r\n   */\r\n  function onDelegateShow(event: Event): void {\r\n    if (closest(event.target as Element, instance.props.target)) {\r\n      scheduleShow(event)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event listener invoked when a child target should hide\r\n   */\r\n  function onDelegateHide(event: Event): void {\r\n    if (closest(event.target as Element, instance.props.target)) {\r\n      scheduleHide()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determines if an event listener should stop further execution due to the\r\n   * `touchHold` option\r\n   */\r\n  function isEventListenerStopped(event: Event): boolean {\r\n    const supportsTouch = 'ontouchstart' in window\r\n    const isTouchEvent = includes(event.type, 'touch')\r\n    const { touchHold } = instance.props\r\n\r\n    return (\r\n      (supportsTouch && isUsingTouch && touchHold && !isTouchEvent) ||\r\n      (isUsingTouch && !touchHold && isTouchEvent)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Runs the mount callback\r\n   */\r\n  function runMountCallback(): void {\r\n    if (!hasMountCallbackRun && currentMountCallback) {\r\n      hasMountCallbackRun = true\r\n      reflow(popper)\r\n      currentMountCallback()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates the popper instance for the instance\r\n   */\r\n  function createPopperInstance(): void {\r\n    const { popperOptions } = instance.props\r\n    const { tooltip, arrow } = instance.popperChildren\r\n    const preventOverflowModifier = getModifier(\r\n      popperOptions,\r\n      'preventOverflow',\r\n    )\r\n\r\n    function applyMutations(data: Popper.Data): void {\r\n      if (instance.props.flip && !instance.props.flipOnUpdate) {\r\n        if (data.flipped) {\r\n          instance.popperInstance!.options.placement = data.placement\r\n        }\r\n\r\n        setFlipModifierEnabled(instance.popperInstance!.modifiers, false)\r\n      }\r\n\r\n      // Apply all of the popper's attributes to the tootip node as well.\r\n      // Allows users to avoid using the .tippy-popper selector for themes.\r\n      tooltip.setAttribute(PLACEMENT_ATTRIBUTE, data.placement)\r\n\r\n      if (data.attributes[OUT_OF_BOUNDARIES_ATTRIBUTE] !== false) {\r\n        tooltip.setAttribute(OUT_OF_BOUNDARIES_ATTRIBUTE, '')\r\n      } else {\r\n        tooltip.removeAttribute(OUT_OF_BOUNDARIES_ATTRIBUTE)\r\n      }\r\n\r\n      // Prevents a transition when changing placements (while tippy is visible)\r\n      // for scroll/resize updates\r\n      if (\r\n        previousPlacement &&\r\n        previousPlacement !== data.placement &&\r\n        wasVisibleDuringPreviousUpdate\r\n      ) {\r\n        tooltip.style.transition = 'none'\r\n        requestAnimationFrame(() => {\r\n          tooltip.style.transition = ''\r\n        })\r\n      }\r\n      previousPlacement = data.placement\r\n      wasVisibleDuringPreviousUpdate = instance.state.isVisible\r\n\r\n      const basicPlacement = getBasicPlacement(popper)\r\n      const styles = tooltip.style\r\n\r\n      // Account for the `distance` offset\r\n      styles.top = styles.bottom = styles.left = styles.right = ''\r\n      styles[basicPlacement] = getOffsetDistanceInPx(instance.props.distance)\r\n\r\n      const padding =\r\n        preventOverflowModifier && preventOverflowModifier.padding !== undefined\r\n          ? preventOverflowModifier.padding\r\n          : PADDING\r\n      const isPaddingNumber = typeof padding === 'number'\r\n\r\n      const computedPadding = {\r\n        top: isPaddingNumber ? padding : padding.top,\r\n        bottom: isPaddingNumber ? padding : padding.bottom,\r\n        left: isPaddingNumber ? padding : padding.left,\r\n        right: isPaddingNumber ? padding : padding.right,\r\n        ...(!isPaddingNumber && padding),\r\n      }\r\n\r\n      computedPadding[basicPlacement] = isPaddingNumber\r\n        ? padding + instance.props.distance\r\n        : (padding[basicPlacement] || 0) + instance.props.distance\r\n\r\n      instance.popperInstance!.modifiers.filter(\r\n        m => m.name === 'preventOverflow',\r\n      )[0].padding = computedPadding\r\n\r\n      currentComputedPadding = computedPadding\r\n    }\r\n\r\n    const config = {\r\n      eventsEnabled: false,\r\n      placement: instance.props.placement,\r\n      ...popperOptions,\r\n      modifiers: {\r\n        ...(popperOptions ? popperOptions.modifiers : {}),\r\n        preventOverflow: {\r\n          boundariesElement: instance.props.boundary,\r\n          padding: PADDING,\r\n          ...preventOverflowModifier,\r\n        },\r\n        arrow: {\r\n          element: arrow,\r\n          enabled: !!arrow,\r\n          ...getModifier(popperOptions, 'arrow'),\r\n        },\r\n        flip: {\r\n          enabled: instance.props.flip,\r\n          // The tooltip is offset by 10px from the popper in CSS,\r\n          // we need to account for its distance\r\n          padding: instance.props.distance + PADDING,\r\n          behavior: instance.props.flipBehavior,\r\n          ...getModifier(popperOptions, 'flip'),\r\n        },\r\n        offset: {\r\n          offset: instance.props.offset,\r\n          ...getModifier(popperOptions, 'offset'),\r\n        },\r\n      },\r\n      onCreate(data: Popper.Data) {\r\n        applyMutations(data)\r\n        runMountCallback()\r\n\r\n        if (popperOptions && popperOptions.onCreate) {\r\n          popperOptions.onCreate(data)\r\n        }\r\n      },\r\n      onUpdate(data: Popper.Data) {\r\n        applyMutations(data)\r\n        runMountCallback()\r\n\r\n        if (popperOptions && popperOptions.onUpdate) {\r\n          popperOptions.onUpdate(data)\r\n        }\r\n      },\r\n    }\r\n\r\n    instance.popperInstance = new Popper(\r\n      reference,\r\n      popper,\r\n      config,\r\n    ) as PopperInstance\r\n  }\r\n\r\n  /**\r\n   * Mounts the tooltip to the DOM\r\n   */\r\n  function mount(): void {\r\n    hasMountCallbackRun = false\r\n\r\n    const isInLooseFollowCursorMode = getIsInLooseFollowCursorMode()\r\n\r\n    if (instance.popperInstance) {\r\n      setFlipModifierEnabled(\r\n        instance.popperInstance.modifiers,\r\n        instance.props.flip,\r\n      )\r\n\r\n      if (!isInLooseFollowCursorMode) {\r\n        instance.popperInstance.reference = reference\r\n        instance.popperInstance.enableEventListeners()\r\n      }\r\n\r\n      instance.popperInstance.scheduleUpdate()\r\n    } else {\r\n      createPopperInstance()\r\n\r\n      if (!isInLooseFollowCursorMode) {\r\n        instance.popperInstance!.enableEventListeners()\r\n      }\r\n    }\r\n\r\n    const { appendTo } = instance.props\r\n    const parentNode =\r\n      appendTo === 'parent'\r\n        ? reference.parentNode\r\n        : invokeWithArgsOrReturn(appendTo, [reference])\r\n\r\n    if (!parentNode.contains(popper)) {\r\n      parentNode.appendChild(popper)\r\n      instance.props.onMount(instance)\r\n      instance.state.isMounted = true\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup before show() is invoked (delays, etc.)\r\n   */\r\n  function scheduleShow(\r\n    event?: Event,\r\n    shouldAvoidCallingOnTrigger?: boolean,\r\n  ): void {\r\n    clearDelayTimeouts()\r\n\r\n    if (instance.state.isVisible) {\r\n      return\r\n    }\r\n\r\n    // Is a delegate, create an instance for the child target\r\n    if (instance.props.target) {\r\n      return createDelegateChildTippy(event)\r\n    }\r\n\r\n    isScheduledToShow = true\r\n\r\n    if (event && !shouldAvoidCallingOnTrigger) {\r\n      instance.props.onTrigger(instance, event)\r\n    }\r\n\r\n    if (instance.props.wait) {\r\n      return instance.props.wait(instance, event)\r\n    }\r\n\r\n    // If the tooltip has a delay, we need to be listening to the mousemove as\r\n    // soon as the trigger event is fired, so that it's in the correct position\r\n    // upon mount.\r\n    // Edge case: if the tooltip is still mounted, but then scheduleShow() is\r\n    // called, it causes a jump.\r\n    if (getIsInLooseFollowCursorMode() && !instance.state.isMounted) {\r\n      if (!instance.popperInstance) {\r\n        createPopperInstance()\r\n      }\r\n\r\n      document.addEventListener('mousemove', positionVirtualReferenceNearCursor)\r\n    }\r\n\r\n    addDocumentClickListener()\r\n\r\n    const delay = getValue(instance.props.delay, 0, defaultProps.delay)\r\n\r\n    if (delay) {\r\n      showTimeoutId = setTimeout(() => {\r\n        show()\r\n      }, delay)\r\n    } else {\r\n      show()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup before hide() is invoked (delays, etc.)\r\n   */\r\n  function scheduleHide(): void {\r\n    clearDelayTimeouts()\r\n\r\n    if (!instance.state.isVisible) {\r\n      removeFollowCursorListener()\r\n      removeDocumentClickListener()\r\n      return\r\n    }\r\n\r\n    isScheduledToShow = false\r\n\r\n    const delay = getValue(instance.props.delay, 1, defaultProps.delay)\r\n\r\n    if (delay) {\r\n      hideTimeoutId = setTimeout(() => {\r\n        if (instance.state.isVisible) {\r\n          hide()\r\n        }\r\n      }, delay)\r\n    } else {\r\n      // Fixes a `transitionend` problem when it fires 1 frame too\r\n      // late sometimes, we don't want hide() to be called.\r\n      scheduleHideAnimationFrameId = requestAnimationFrame(() => {\r\n        hide()\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listener to handle clicks on the document to determine if the\r\n   * instance should hide\r\n   */\r\n  function onDocumentClick(event: MouseEvent): void {\r\n    // Clicked on interactive popper\r\n    if (\r\n      instance.props.interactive &&\r\n      popper.contains(event.target as Element)\r\n    ) {\r\n      return\r\n    }\r\n\r\n    // Clicked on the event listeners target\r\n    if (getEventListenersTarget().contains(event.target as Element)) {\r\n      if (isUsingTouch) {\r\n        return\r\n      }\r\n\r\n      if (\r\n        instance.state.isVisible &&\r\n        includes(instance.props.trigger, 'click')\r\n      ) {\r\n        return\r\n      }\r\n    }\r\n\r\n    if (instance.props.hideOnClick === true) {\r\n      clearDelayTimeouts()\r\n      hide()\r\n    }\r\n  }\r\n\r\n  /* ======================= 🔑 Public methods 🔑 ======================= */\r\n  /**\r\n   * Enables the instance to allow it to show or hide\r\n   */\r\n  function enable(): void {\r\n    instance.state.isEnabled = true\r\n  }\r\n\r\n  /**\r\n   * Disables the instance to disallow it to show or hide\r\n   */\r\n  function disable(): void {\r\n    instance.state.isEnabled = false\r\n  }\r\n\r\n  /**\r\n   * Clears pending timeouts related to the `delay` prop if any\r\n   */\r\n  function clearDelayTimeouts(): void {\r\n    clearTimeout(showTimeoutId)\r\n    clearTimeout(hideTimeoutId)\r\n    cancelAnimationFrame(scheduleHideAnimationFrameId)\r\n  }\r\n\r\n  /**\r\n   * Sets new props for the instance and redraws the tooltip\r\n   */\r\n  function set(options: Options): void {\r\n    // Backwards-compatible after TypeScript change\r\n    options = options || {}\r\n\r\n    validateOptions(options, defaultProps)\r\n\r\n    removeTriggersFromReference()\r\n\r\n    const prevProps = instance.props\r\n    const nextProps = evaluateProps(reference, {\r\n      ...instance.props,\r\n      ...options,\r\n      ignoreAttributes: true,\r\n    })\r\n    nextProps.ignoreAttributes = hasOwnProperty(options, 'ignoreAttributes')\r\n      ? options.ignoreAttributes || false\r\n      : prevProps.ignoreAttributes\r\n    instance.props = nextProps\r\n\r\n    addTriggersToReference()\r\n\r\n    cleanupInteractiveMouseListeners()\r\n    debouncedOnMouseMove = debounce(onMouseMove, nextProps.interactiveDebounce)\r\n\r\n    updatePopperElement(popper, prevProps, nextProps)\r\n    instance.popperChildren = getChildren(popper)\r\n\r\n    if (instance.popperInstance) {\r\n      if (\r\n        POPPER_INSTANCE_DEPENDENCIES.some(prop => {\r\n          return (\r\n            hasOwnProperty(options, prop) && options[prop] !== prevProps[prop]\r\n          )\r\n        })\r\n      ) {\r\n        instance.popperInstance.destroy()\r\n        createPopperInstance()\r\n\r\n        if (instance.state.isVisible) {\r\n          instance.popperInstance.enableEventListeners()\r\n        }\r\n\r\n        if (instance.props.followCursor && lastMouseMoveEvent) {\r\n          positionVirtualReferenceNearCursor(lastMouseMoveEvent)\r\n        }\r\n      } else {\r\n        instance.popperInstance.update()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shortcut for .set({ content: newContent })\r\n   */\r\n  function setContent(content: Content): void {\r\n    set({ content })\r\n  }\r\n\r\n  /**\r\n   * Shows the tooltip\r\n   */\r\n  function show(\r\n    duration: number = getValue(\r\n      instance.props.duration,\r\n      0,\r\n      (defaultProps.duration as [number, number])[1],\r\n    ),\r\n  ): void {\r\n    if (\r\n      instance.state.isDestroyed ||\r\n      !instance.state.isEnabled ||\r\n      (isUsingTouch && !instance.props.touch)\r\n    ) {\r\n      return\r\n    }\r\n\r\n    // Standardize `disabled` behavior across browsers.\r\n    // Firefox allows events on disabled elements, but Chrome doesn't.\r\n    // Using a wrapper element (i.e. <span>) is recommended.\r\n    if (getEventListenersTarget().hasAttribute('disabled')) {\r\n      return\r\n    }\r\n\r\n    if (instance.props.onShow(instance) === false) {\r\n      return\r\n    }\r\n\r\n    addDocumentClickListener()\r\n\r\n    popper.style.visibility = 'visible'\r\n    instance.state.isVisible = true\r\n\r\n    if (instance.props.interactive) {\r\n      getEventListenersTarget().classList.add(ACTIVE_CLASS)\r\n    }\r\n\r\n    // Prevent a transition if the popper is at the opposite placement\r\n    const transitionableElements = getTransitionableElements()\r\n    setTransitionDuration(transitionableElements.concat(popper), 0)\r\n\r\n    currentMountCallback = (): void => {\r\n      if (!instance.state.isVisible) {\r\n        return\r\n      }\r\n\r\n      const isInLooseFollowCursorMode = getIsInLooseFollowCursorMode()\r\n\r\n      if (isInLooseFollowCursorMode && lastMouseMoveEvent) {\r\n        positionVirtualReferenceNearCursor(lastMouseMoveEvent)\r\n      } else if (!isInLooseFollowCursorMode) {\r\n        // Double update will apply correct mutations\r\n        instance.popperInstance!.update()\r\n      }\r\n\r\n      if (instance.popperChildren.backdrop) {\r\n        instance.popperChildren.content.style.transitionDelay =\r\n          Math.round(duration / 12) + 'ms'\r\n      }\r\n\r\n      if (instance.props.sticky) {\r\n        makeSticky()\r\n      }\r\n\r\n      setTransitionDuration([popper], instance.props.updateDuration)\r\n      setTransitionDuration(transitionableElements, duration)\r\n      setVisibilityState(transitionableElements, 'visible')\r\n\r\n      onTransitionedIn(\r\n        duration,\r\n        (): void => {\r\n          if (instance.props.aria) {\r\n            getEventListenersTarget().setAttribute(\r\n              `aria-${instance.props.aria}`,\r\n              popper.id,\r\n            )\r\n          }\r\n\r\n          instance.props.onShown(instance)\r\n          instance.state.isShown = true\r\n        },\r\n      )\r\n    }\r\n\r\n    mount()\r\n  }\r\n\r\n  /**\r\n   * Hides the tooltip\r\n   */\r\n  function hide(\r\n    duration: number = getValue(\r\n      instance.props.duration,\r\n      1,\r\n      (defaultProps.duration as [number, number])[1],\r\n    ),\r\n  ): void {\r\n    if (\r\n      instance.state.isDestroyed ||\r\n      (!instance.state.isEnabled && !isBeingDestroyed)\r\n    ) {\r\n      return\r\n    }\r\n\r\n    if (instance.props.onHide(instance) === false && !isBeingDestroyed) {\r\n      return\r\n    }\r\n\r\n    removeDocumentClickListener()\r\n\r\n    popper.style.visibility = 'hidden'\r\n    instance.state.isVisible = false\r\n    instance.state.isShown = false\r\n    wasVisibleDuringPreviousUpdate = false\r\n\r\n    if (instance.props.interactive) {\r\n      getEventListenersTarget().classList.remove(ACTIVE_CLASS)\r\n    }\r\n\r\n    const transitionableElements = getTransitionableElements()\r\n    setTransitionDuration(transitionableElements, duration)\r\n    setVisibilityState(transitionableElements, 'hidden')\r\n\r\n    onTransitionedOut(duration, () => {\r\n      if (!isScheduledToShow) {\r\n        removeFollowCursorListener()\r\n      }\r\n\r\n      if (instance.props.aria) {\r\n        getEventListenersTarget().removeAttribute(`aria-${instance.props.aria}`)\r\n      }\r\n\r\n      instance.popperInstance!.disableEventListeners()\r\n      instance.popperInstance!.options.placement = instance.props.placement\r\n\r\n      popper.parentNode!.removeChild(popper)\r\n      instance.props.onHidden(instance)\r\n      instance.state.isMounted = false\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Destroys the tooltip\r\n   */\r\n  function destroy(destroyTargetInstances?: boolean): void {\r\n    if (instance.state.isDestroyed) {\r\n      return\r\n    }\r\n\r\n    isBeingDestroyed = true\r\n\r\n    // If the popper is currently mounted to the DOM, we want to ensure it gets\r\n    // hidden and unmounted instantly upon destruction\r\n    if (instance.state.isMounted) {\r\n      hide(0)\r\n    }\r\n\r\n    removeTriggersFromReference()\r\n\r\n    delete reference._tippy\r\n\r\n    const { target } = instance.props\r\n    if (target && destroyTargetInstances && isRealElement(reference)) {\r\n      arrayFrom(reference.querySelectorAll(target)).forEach(\r\n        (child: ReferenceElement) => {\r\n          if (child._tippy) {\r\n            child._tippy.destroy()\r\n          }\r\n        },\r\n      )\r\n    }\r\n\r\n    if (instance.popperInstance) {\r\n      instance.popperInstance.destroy()\r\n    }\r\n\r\n    isBeingDestroyed = false\r\n    instance.state.isDestroyed = true\r\n  }\r\n}\r\n","import { version } from '../package.json'\r\nimport { isBrowser } from './browser'\r\nimport { defaultProps } from './props'\r\nimport createTippy from './createTippy'\r\nimport bindGlobalEventListeners from './bindGlobalEventListeners'\r\nimport group from './group'\r\nimport { polyfillElementPrototypeProperties } from './reference'\r\nimport { arrayFrom } from './ponyfills'\r\nimport { hideAll } from './popper'\r\nimport {\r\n  isSingular,\r\n  isBareVirtualElement,\r\n  getArrayOfElements,\r\n  validateOptions,\r\n} from './utils'\r\nimport { Options, Props, Instance, Targets, VirtualReference } from './types'\r\n\r\nlet globalEventListenersBound = false\r\n\r\n/**\r\n * Exported module\r\n */\r\nfunction tippy(targets: Targets, options?: Options): Instance | Instance[] {\r\n  validateOptions(options || {}, defaultProps)\r\n\r\n  if (!globalEventListenersBound) {\r\n    bindGlobalEventListeners()\r\n    globalEventListenersBound = true\r\n  }\r\n\r\n  const props: Props = { ...defaultProps, ...options }\r\n\r\n  // If they are specifying a virtual positioning reference, we need to polyfill\r\n  // some native DOM props\r\n  if (isBareVirtualElement(targets)) {\r\n    polyfillElementPrototypeProperties(targets as VirtualReference)\r\n  }\r\n\r\n  const instances = getArrayOfElements(targets).reduce<Instance[]>(\r\n    (acc, reference) => {\r\n      const instance = reference && createTippy(reference, props)\r\n\r\n      if (instance) {\r\n        acc.push(instance)\r\n      }\r\n\r\n      return acc\r\n    },\r\n    [],\r\n  )\r\n\r\n  return isSingular(targets) ? instances[0] : instances\r\n}\r\n\r\n/**\r\n * Static props\r\n */\r\ntippy.version = version\r\ntippy.defaults = defaultProps\r\n\r\n/**\r\n * Static methods\r\n */\r\ntippy.setDefaults = (partialDefaults: Options) => {\r\n  Object.keys(partialDefaults).forEach(key => {\r\n    // @ts-ignore\r\n    defaultProps[key] = partialDefaults[key]\r\n  })\r\n}\r\ntippy.hideAll = hideAll\r\ntippy.group = group\r\n\r\n/**\r\n * Auto-init tooltips for elements with a `data-tippy=\"...\"` attribute\r\n */\r\nexport function autoInit(): void {\r\n  arrayFrom(document.querySelectorAll('[data-tippy]')).forEach(el => {\r\n    const content = el.getAttribute('data-tippy')\r\n\r\n    if (content) {\r\n      tippy(el, { content })\r\n    }\r\n  })\r\n}\r\n\r\nif (isBrowser) {\r\n  setTimeout(autoInit)\r\n}\r\n\r\nexport default tippy\r\n","import { GroupedInstance, GroupOptions } from './types'\r\n\r\n/**\r\n * Groups an array of instances by taking control of their props during\r\n * certain lifecycles.\r\n */\r\nexport default function group(\r\n  instances: GroupedInstance[],\r\n  { delay = instances[0].props.delay, duration = 0 }: GroupOptions = {},\r\n): void {\r\n  let isAnyTippyOpen = false\r\n\r\n  instances.forEach(instance => {\r\n    if (instance._originalProps) {\r\n      instance.set(instance._originalProps)\r\n    } else {\r\n      instance._originalProps = { ...instance.props }\r\n    }\r\n  })\r\n\r\n  function setIsAnyTippyOpen(value: boolean): void {\r\n    isAnyTippyOpen = value\r\n    updateInstances()\r\n  }\r\n\r\n  function onShow(instance: GroupedInstance): void {\r\n    instance._originalProps.onShow(instance)\r\n\r\n    instances.forEach(instance => {\r\n      instance.set({ duration })\r\n\r\n      if (instance.state.isVisible) {\r\n        instance.hide()\r\n      }\r\n    })\r\n\r\n    setIsAnyTippyOpen(true)\r\n  }\r\n\r\n  function onHide(instance: GroupedInstance): void {\r\n    instance._originalProps.onHide(instance)\r\n    setIsAnyTippyOpen(false)\r\n  }\r\n\r\n  function onShown(instance: GroupedInstance): void {\r\n    instance._originalProps.onShown(instance)\r\n    instance.set({ duration: instance._originalProps.duration })\r\n  }\r\n\r\n  function updateInstances(): void {\r\n    instances.forEach(instance => {\r\n      instance.set({\r\n        onShow,\r\n        onShown,\r\n        onHide,\r\n        delay: isAnyTippyOpen\r\n          ? [0, Array.isArray(delay) ? delay[1] : delay]\r\n          : delay,\r\n        duration: isAnyTippyOpen ? duration : instance._originalProps.duration,\r\n      })\r\n    })\r\n  }\r\n\r\n  updateInstances()\r\n}\r\n"],"names":["isBrowser","window","document","ua","navigator","userAgent","isIE","test","isUCBrowser","isIOS","platform","MSStream","defaultProps","a11y","allowHTML","animateFill","animation","appendTo","body","aria","arrow","arrowType","boundary","content","delay","distance","duration","flip","flipBehavior","flipOnUpdate","followCursor","hideOnClick","ignoreAttributes","inertia","interactive","interactiveBorder","interactiveDebounce","lazy","maxWidth","multiple","offset","onHidden","onHide","onMount","onShow","onShown","onTrigger","placement","popperOptions","role","showOnInit","size","sticky","target","theme","touch","touchHold","trigger","triggerTarget","updateDuration","wait","zIndex","POPPER_INSTANCE_DEPENDENCIES","elementProto","Element","prototype","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","arrayFrom","value","slice","call","closest","element","selector","closestCallback","el","callback","parentElement","PASSIVE","passive","PADDING","PLACEMENT_ATTRIBUTE","OUT_OF_BOUNDARIES_ATTRIBUTE","IOS_CLASS","ACTIVE_CLASS","POPPER_CLASS","TOOLTIP_CLASS","CONTENT_CLASS","BACKDROP_CLASS","ARROW_CLASS","ROUND_ARROW_CLASS","POPPER_SELECTOR","TOOLTIP_SELECTOR","CONTENT_SELECTOR","BACKDROP_SELECTOR","ARROW_SELECTOR","ROUND_ARROW_SELECTOR","isUsingTouch","onDocumentTouch","classList","add","performance","addEventListener","onDocumentMouseMove","lastMouseMoveTime","now","removeEventListener","remove","onWindowBlur","activeElement","blur","_tippy","keys","Object","hasOwnProperty","obj","key","getValue","index","defaultValue","Array","isArray","v","debounce","fn","ms","arg","clearTimeout","timeout","setTimeout","getModifier","modifiers","includes","a","b","indexOf","isRealElement","isSingular","invokeWithArgsOrReturn","args","apply","setFlipModifierEnabled","filter","m","name","enabled","div","createElement","setTransitionDuration","els","forEach","style","transitionDuration","setVisibilityState","state","setAttribute","evaluateProps","reference","props","out","reduce","acc","valueAsString","getAttribute","trim","JSON","parse","e","getDataAttributeOptions","validateOptions","options","option","Error","splitBySpaces","split","Boolean","setInnerHTML","html","setContent","contentEl","appendChild","getChildren","popper","tooltip","querySelector","backdrop","addInertia","createArrowElement","className","createBackdropElement","addInteractive","updateTransitionEndListener","action","listener","eventName","undefined","webkitTransition","getBasicPlacement","fullPlacement","updateTheme","themeName","createPopperElement","id","position","top","left","updatePopperElement","prevProps","nextProps","removeAttribute","removeChild","replaceChild","removeInteractive","removeInertia","idCounter","mouseMoveListeners","createTippy","collectionProps","lastTriggerEventType","lastMouseMoveEvent","showTimeoutId","hideTimeoutId","scheduleHideAnimationFrameId","previousPlacement","currentMountCallback","currentTransitionEndListener","currentComputedPadding","isScheduledToShow","isBeingDestroyed","wasVisibleDuringPreviousUpdate","hasMountCallbackRun","listeners","debouncedOnMouseMove","onMouseMove","popperChildren","instance","popperInstance","isEnabled","isVisible","isDestroyed","isMounted","isShown","clearDelayTimeouts","set","show","hide","enable","disable","destroy","destroyTargetInstances","removeTriggersFromReference","querySelectorAll","child","addTriggersToReference","createPopperInstance","scheduleShow","getEventListenersTarget","hasAttribute","event","removeFollowCursorListener","positionVirtualReferenceNearCursor","cleanupInteractiveMouseListeners","scheduleHide","addDocumentClickListener","onDocumentClick","removeDocumentClickListener","getTransitionableElements","getIsInLooseFollowCursorMode","onTransitionEnd","on","eventType","handler","push","onMouseLeave","onDelegateShow","onDelegateHide","onBlur","x","clientX","y","clientY","isCursorOverReference","rect","getBoundingClientRect","isHorizontal","isVertical","isVerticalPlacement","isVariation","offsetWidth","offsetHeight","halfSize","verticalIncrease","horizontalIncrease","referenceNode","clientWidth","clientHeight","width","height","bottom","right","update","isEventListenerStopped","type","MouseEvent","isCursorOverPopper","popperPlacement","popperRect","exceedsTop","exceedsBottom","exceedsLeft","exceedsRight","isCursorOutsideInteractiveBorder","relatedTarget","contains","supportsTouch","isTouchEvent","runMountCallback","reflow","preventOverflowModifier","applyMutations","data","flipped","attributes","transition","requestAnimationFrame","basicPlacement","styles","padding","isPaddingNumber","computedPadding","config","eventsEnabled","preventOverflow","boundariesElement","behavior","onCreate","onUpdate","Popper","shouldAvoidCallingOnTrigger","targetEl","createDelegateChildTippy","cancelAnimationFrame","some","prop","enableEventListeners","visibility","transitionableElements","concat","isInLooseFollowCursorMode","transitionDelay","Math","round","prevRefRect","updatePosition","currentRefRect","scheduleUpdate","makeSticky","onTransitionedIn","parentNode","mount","onTransitionedOut","disableEventListeners","globalEventListenersBound","tippy","targets","toString","virtualReference","polyfills","isVirtual","classNames","polyfillElementPrototypeProperties","instances","NodeList","getArrayOfElements","version","defaults","setDefaults","partialDefaults","hideAll","excludedReferenceOrInstance","exclude","isExcluded","group","isAnyTippyOpen","setIsAnyTippyOpen","updateInstances","_originalProps"],"mappings":"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"}