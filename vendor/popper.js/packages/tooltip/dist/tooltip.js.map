{"version":3,"file":"tooltip.js","sources":["../../popper/src/utils/isFunction.js","../src/index.js"],"sourcesContent":["/**\r\n * Check if the given variable is a function\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Any} functionToCheck - variable to check\r\n * @returns {Boolean} answer to: is a function?\r\n */\r\nexport default function isFunction(functionToCheck) {\r\n  const getType = {};\r\n  return (\r\n    functionToCheck &&\r\n    getType.toString.call(functionToCheck) === '[object Function]'\r\n  );\r\n}\r\n","import Popper from 'popper.js';\r\nimport isFunction from '../../popper/src/utils/isFunction';\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  container: false,\r\n  delay: 0,\r\n  html: false,\r\n  placement: 'top',\r\n  title: '',\r\n  template:\r\n    '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\r\n  trigger: 'hover focus',\r\n  offset: 0,\r\n  arrowSelector: '.tooltip-arrow, .tooltip__arrow',\r\n  innerSelector: '.tooltip-inner, .tooltip__inner',\r\n};\r\n\r\nexport default class Tooltip {\r\n  /**\r\n   * Create a new Tooltip.js instance\r\n   * @class Tooltip\r\n   * @param {HTMLElement} reference - The DOM node used as reference of the tooltip (it can be a jQuery element).\r\n   * @param {Object} options\r\n   * @param {String} options.placement='top'\r\n   *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -end),\r\n   *      left(-start, -end)`\r\n   * @param {String} [options.arrowSelector='.tooltip-arrow, .tooltip__arrow'] - className used to locate the DOM arrow element in the tooltip.\r\n   * @param {String} [options.innerSelector='.tooltip-inner, .tooltip__inner'] - className used to locate the DOM inner element in the tooltip.\r\n   * @param {HTMLElement|String|false} options.container=false - Append the tooltip to a specific element.\r\n   * @param {Number|Object} options.delay=0\r\n   *      Delay showing and hiding the tooltip (ms) - does not apply to manual trigger type.\r\n   *      If a number is supplied, delay is applied to both hide/show.\r\n   *      Object structure is: `{ show: 500, hide: 100 }`\r\n   * @param {Boolean} options.html=false - Insert HTML into the tooltip. If false, the content will inserted with `textContent`.\r\n   * @param {String} [options.template='<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>']\r\n   *      Base HTML to used when creating the tooltip.\r\n   *      The tooltip's `title` will be injected into the `.tooltip-inner` or `.tooltip__inner`.\r\n   *      `.tooltip-arrow` or `.tooltip__arrow` will become the tooltip's arrow.\r\n   *      The outermost wrapper element should have the `.tooltip` class.\r\n   * @param {String|HTMLElement|TitleFunction} options.title='' - Default title value if `title` attribute isn't present.\r\n   * @param {String} [options.trigger='hover focus']\r\n   *      How tooltip is triggered - click, hover, focus, manual.\r\n   *      You may pass multiple triggers; separate them with a space. `manual` cannot be combined with any other trigger.\r\n   * @param {Boolean} options.closeOnClickOutside=false - Close a popper on click outside of the popper and reference element. This has effect only when options.trigger is 'click'.\r\n   * @param {String|HTMLElement} options.boundariesElement\r\n   *      The element used as boundaries for the tooltip. For more information refer to Popper.js'\r\n   *      [boundariesElement docs](https://popper.js.org/popper-documentation.html)\r\n   * @param {Number|String} options.offset=0 - Offset of the tooltip relative to its reference. For more information refer to Popper.js'\r\n   *      [offset docs](https://popper.js.org/popper-documentation.html)\r\n   * @param {Object} options.popperOptions={} - Popper options, will be passed directly to popper instance. For more information refer to Popper.js'\r\n   *      [options docs](https://popper.js.org/popper-documentation.html)\r\n   * @return {Object} instance - The generated tooltip instance\r\n   */\r\n  constructor(reference, options) {\r\n    // apply user options over default ones\r\n    options = { ...DEFAULT_OPTIONS, ...options };\r\n\r\n    reference.jquery && (reference = reference[0]);\r\n\r\n    // cache reference and options\r\n    this.reference = reference;\r\n    this.options = options;\r\n\r\n    // get events list\r\n    const events =\r\n      typeof options.trigger === 'string'\r\n        ? options.trigger\r\n            .split(' ')\r\n            .filter(\r\n              trigger => ['click', 'hover', 'focus'].indexOf(trigger) !== -1\r\n            )\r\n        : [];\r\n\r\n    // set initial state\r\n    this._isOpen = false;\r\n    this._popperOptions = {};\r\n\r\n    // set event listeners\r\n    this._setEventListeners(reference, events, options);\r\n  }\r\n\r\n  //\r\n  // Public methods\r\n  //\r\n\r\n  /**\r\n   * Reveals an element's tooltip. This is considered a \"manual\" triggering of the tooltip.\r\n   * Tooltips with zero-length titles are never displayed.\r\n   * @method Tooltip#show\r\n   * @memberof Tooltip\r\n   */\r\n  show = () => this._show(this.reference, this.options);\r\n\r\n  /**\r\n   * Hides an element’s tooltip. This is considered a “manual” triggering of the tooltip.\r\n   * @method Tooltip#hide\r\n   * @memberof Tooltip\r\n   */\r\n  hide = () => this._hide();\r\n\r\n  /**\r\n   * Hides and destroys an element’s tooltip.\r\n   * @method Tooltip#dispose\r\n   * @memberof Tooltip\r\n   */\r\n  dispose = () => this._dispose();\r\n\r\n  /**\r\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\r\n   * @method Tooltip#toggle\r\n   * @memberof Tooltip\r\n   */\r\n  toggle = () => {\r\n    if (this._isOpen) {\r\n      return this.hide();\r\n    } else {\r\n      return this.show();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Updates the tooltip's title content\r\n   * @method Tooltip#updateTitleContent\r\n   * @memberof Tooltip\r\n   * @param {String|HTMLElement} title - The new content to use for the title\r\n   */\r\n  updateTitleContent = (title) => this._updateTitleContent(title);\r\n\r\n  //\r\n  // Private methods\r\n  //\r\n\r\n  _events = [];\r\n\r\n  /**\r\n   * Creates a new tooltip node\r\n   * @memberof Tooltip\r\n   * @private\r\n   * @param {HTMLElement} reference\r\n   * @param {String} template\r\n   * @param {String|HTMLElement|TitleFunction} title\r\n   * @param {Boolean} allowHtml\r\n   * @return {HTMLElement} tooltipNode\r\n   */\r\n  _create(reference, template, title, allowHtml) {\r\n    // create tooltip element\r\n    const tooltipGenerator = window.document.createElement('div');\r\n    tooltipGenerator.innerHTML = template.trim();\r\n    const tooltipNode = tooltipGenerator.childNodes[0];\r\n\r\n    // add unique ID to our tooltip (needed for accessibility reasons)\r\n    tooltipNode.id = `tooltip_${Math.random()\r\n      .toString(36)\r\n      .substr(2, 10)}`;\r\n\r\n    // set initial `aria-hidden` state to `false` (it's visible!)\r\n    tooltipNode.setAttribute('aria-hidden', 'false');\r\n\r\n    // add title to tooltip\r\n    const titleNode = tooltipGenerator.querySelector(this.options.innerSelector);\r\n    this._addTitleContent(reference, title, allowHtml, titleNode);\r\n\r\n    // return the generated tooltip node\r\n    return tooltipNode;\r\n  }\r\n\r\n  _addTitleContent(reference, title, allowHtml, titleNode) {\r\n    if (title.nodeType === 1 || title.nodeType === 11) {\r\n      // if title is a element node or document fragment, append it only if allowHtml is true\r\n      allowHtml && titleNode.appendChild(title);\r\n    } else if (isFunction(title)) {\r\n      // Recursively call ourself so that the return value of the function gets handled appropriately - either\r\n      // as a dom node, a string, or even as another function.\r\n      this._addTitleContent(reference, title.call(reference), allowHtml, titleNode);\r\n    } else {\r\n      // if it's just a simple text, set textContent or innerHtml depending by `allowHtml` value\r\n      allowHtml ? (titleNode.innerHTML = title) : (titleNode.textContent = title);\r\n    }\r\n  }\r\n\r\n  _show(reference, options) {\r\n    // don't show if it's already visible\r\n    // or if it's not being showed\r\n    if (this._isOpen && !this._isOpening) {\r\n      return this;\r\n    }\r\n    this._isOpen = true;\r\n\r\n    // if the tooltipNode already exists, just show it\r\n    if (this._tooltipNode) {\r\n      this._tooltipNode.style.visibility = 'visible';\r\n      this._tooltipNode.setAttribute('aria-hidden', 'false');\r\n      this.popperInstance.update();\r\n      return this;\r\n    }\r\n\r\n    // get title\r\n    const title = reference.getAttribute('title') || options.title;\r\n\r\n    // don't show tooltip if no title is defined\r\n    if (!title) {\r\n      return this;\r\n    }\r\n\r\n    // create tooltip node\r\n    const tooltipNode = this._create(\r\n      reference,\r\n      options.template,\r\n      title,\r\n      options.html\r\n    );\r\n\r\n    // Add `aria-describedby` to our reference element for accessibility reasons\r\n    reference.setAttribute('aria-describedby', tooltipNode.id);\r\n\r\n    // append tooltip to container\r\n    const container = this._findContainer(options.container, reference);\r\n\r\n    this._append(tooltipNode, container);\r\n\r\n    this._popperOptions = {\r\n      ...options.popperOptions,\r\n      placement: options.placement,\r\n    };\r\n\r\n    this._popperOptions.modifiers = {\r\n      ...this._popperOptions.modifiers,\r\n      arrow: {\r\n        ...(this._popperOptions.modifiers && this._popperOptions.modifiers.arrow),\r\n        element: options.arrowSelector,\r\n      },\r\n      offset: {\r\n        ...(this._popperOptions.modifiers && this._popperOptions.modifiers.offset),\r\n        offset: options.offset ||\r\n          this._popperOptions.modifiers && this._popperOptions.modifiers.offset && this._popperOptions.modifiers.offset.offset ||\r\n          options.offset,\r\n      },\r\n    };\r\n\r\n    if (options.boundariesElement) {\r\n      this._popperOptions.modifiers.preventOverflow = {\r\n        boundariesElement: options.boundariesElement,\r\n      };\r\n    }\r\n\r\n    this.popperInstance = new Popper(\r\n      reference,\r\n      tooltipNode,\r\n      this._popperOptions\r\n    );\r\n\r\n    this._tooltipNode = tooltipNode;\r\n\r\n    return this;\r\n  }\r\n\r\n  _hide(/*reference, options*/) {\r\n    // don't hide if it's already hidden\r\n    if (!this._isOpen) {\r\n      return this;\r\n    }\r\n\r\n    this._isOpen = false;\r\n\r\n    // hide tooltipNode\r\n    this._tooltipNode.style.visibility = 'hidden';\r\n    this._tooltipNode.setAttribute('aria-hidden', 'true');\r\n\r\n    return this;\r\n  }\r\n\r\n  _dispose() {\r\n    // remove event listeners first to prevent any unexpected behaviour\r\n    this._events.forEach(({ func, event }) => {\r\n      this.reference.removeEventListener(event, func);\r\n    });\r\n    this._events = [];\r\n\r\n    if (this._tooltipNode) {\r\n      this._hide();\r\n\r\n      // destroy instance\r\n      this.popperInstance.destroy();\r\n\r\n      // destroy tooltipNode if removeOnDestroy is not set, as popperInstance.destroy() already removes the element\r\n      if (!this.popperInstance.options.removeOnDestroy) {\r\n        this._tooltipNode.parentNode.removeChild(this._tooltipNode);\r\n        this._tooltipNode = null;\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _findContainer(container, reference) {\r\n    // if container is a query, get the relative element\r\n    if (typeof container === 'string') {\r\n      container = window.document.querySelector(container);\r\n    } else if (container === false) {\r\n      // if container is `false`, set it to reference parent\r\n      container = reference.parentNode;\r\n    }\r\n    return container;\r\n  }\r\n\r\n  /**\r\n   * Append tooltip to container\r\n   * @memberof Tooltip\r\n   * @private\r\n   * @param {HTMLElement} tooltipNode\r\n   * @param {HTMLElement|String|false} container\r\n   */\r\n  _append(tooltipNode, container) {\r\n    container.appendChild(tooltipNode);\r\n  }\r\n\r\n  _setEventListeners(reference, events, options) {\r\n    const directEvents = [];\r\n    const oppositeEvents = [];\r\n\r\n    events.forEach(event => {\r\n      switch (event) {\r\n        case 'hover':\r\n          directEvents.push('mouseenter');\r\n          oppositeEvents.push('mouseleave');\r\n          break;\r\n        case 'focus':\r\n          directEvents.push('focus');\r\n          oppositeEvents.push('blur');\r\n          break;\r\n        case 'click':\r\n          directEvents.push('click');\r\n          oppositeEvents.push('click');\r\n          break;\r\n      }\r\n    });\r\n\r\n    // schedule show tooltip\r\n    directEvents.forEach(event => {\r\n      const func = evt => {\r\n        if (this._isOpening === true) {\r\n          return;\r\n        }\r\n        evt.usedByTooltip = true;\r\n        this._scheduleShow(reference, options.delay, options, evt);\r\n      };\r\n      this._events.push({ event, func });\r\n      reference.addEventListener(event, func);\r\n    });\r\n\r\n    // schedule hide tooltip\r\n    oppositeEvents.forEach(event => {\r\n      const func = evt => {\r\n        if (evt.usedByTooltip === true) {\r\n          return;\r\n        }\r\n        this._scheduleHide(reference, options.delay, options, evt);\r\n      };\r\n      this._events.push({ event, func });\r\n      reference.addEventListener(event, func);\r\n      if (event === 'click' && options.closeOnClickOutside) {\r\n        document.addEventListener('mousedown', e => {\r\n          if (!this._isOpening) {\r\n            return;\r\n          }\r\n          const popper = this.popperInstance.popper;\r\n          if (reference.contains(e.target) ||\r\n              popper.contains(e.target)) {\r\n            return;\r\n          }\r\n          func(e);\r\n        }, true);\r\n      }\r\n    });\r\n  }\r\n\r\n  _scheduleShow(reference, delay, options /*, evt */) {\r\n    this._isOpening = true;\r\n    // defaults to 0\r\n    const computedDelay = (delay && delay.show) || delay || 0;\r\n    this._showTimeout = window.setTimeout(\r\n      () => this._show(reference, options),\r\n      computedDelay\r\n    );\r\n  }\r\n\r\n  _scheduleHide(reference, delay, options, evt) {\r\n    this._isOpening = false;\r\n    // defaults to 0\r\n    const computedDelay = (delay && delay.hide) || delay || 0;\r\n    window.clearTimeout(this._showTimeout);\r\n    window.setTimeout(() => {\r\n      if (this._isOpen === false) {\r\n        return;\r\n      }\r\n      if (!document.body.contains(this._tooltipNode)) {\r\n        return;\r\n      }\r\n\r\n      // if we are hiding because of a mouseleave, we must check that the new\r\n      // reference isn't the tooltip, because in this case we don't want to hide it\r\n      if (evt.type === 'mouseleave') {\r\n        const isSet = this._setTooltipNodeEvent(evt, reference, delay, options);\r\n\r\n        // if we set the new event, don't hide the tooltip yet\r\n        // the new event will take care to hide it if necessary\r\n        if (isSet) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      this._hide(reference, options);\r\n    }, computedDelay);\r\n  }\r\n\r\n  _setTooltipNodeEvent = (evt, reference, delay, options) => {\r\n    const relatedreference =\r\n      evt.relatedreference || evt.toElement || evt.relatedTarget;\r\n\r\n    const callback = evt2 => {\r\n      const relatedreference2 =\r\n        evt2.relatedreference || evt2.toElement || evt2.relatedTarget;\r\n\r\n      // Remove event listener after call\r\n      this._tooltipNode.removeEventListener(evt.type, callback);\r\n\r\n      // If the new reference is not the reference element\r\n      if (!reference.contains(relatedreference2)) {\r\n        // Schedule to hide tooltip\r\n        this._scheduleHide(reference, options.delay, options, evt2);\r\n      }\r\n    };\r\n\r\n    if (this._tooltipNode.contains(relatedreference)) {\r\n      // listen to mouseleave on the tooltip element to be able to hide the tooltip\r\n      this._tooltipNode.addEventListener(evt.type, callback);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  _updateTitleContent(title) {\r\n    if(typeof this._tooltipNode === 'undefined') {\r\n      if(typeof this.options.title !== 'undefined') {\r\n        this.options.title = title;\r\n      }\r\n      return;\r\n    }\r\n    const titleNode = this._tooltipNode.querySelector(this.options.innerSelector);\r\n    this._clearTitleContent(titleNode, this.options.html, this.reference.getAttribute('title') || this.options.title)\r\n    this._addTitleContent(this.reference, title, this.options.html, titleNode);\r\n    this.options.title = title;\r\n    this.popperInstance.update();\r\n  }\r\n\r\n  _clearTitleContent(titleNode, allowHtml, lastTitle) {\r\n    if(lastTitle.nodeType === 1 || lastTitle.nodeType === 11) {\r\n      allowHtml && titleNode.removeChild(lastTitle);\r\n    } else {\r\n      allowHtml ? titleNode.innerHTML = '' : titleNode.textContent = '';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Title function, its context is the Tooltip instance.\r\n * @memberof Tooltip\r\n * @callback TitleFunction\r\n * @return {String} placement - The desired title.\r\n */\r\n"],"names":["isFunction","functionToCheck","getType","toString","call","DEFAULT_OPTIONS","Tooltip","reference","options","jquery","events","trigger","split","filter","indexOf","_isOpen","_popperOptions","_setEventListeners","template","title","allowHtml","tooltipGenerator","window","document","createElement","innerHTML","trim","tooltipNode","childNodes","id","Math","random","substr","setAttribute","titleNode","querySelector","innerSelector","_addTitleContent","nodeType","appendChild","textContent","_isOpening","_tooltipNode","style","visibility","popperInstance","update","getAttribute","_create","html","container","_findContainer","_append","popperOptions","placement","modifiers","arrow","arrowSelector","offset","boundariesElement","preventOverflow","Popper","_events","forEach","func","event","removeEventListener","_hide","destroy","removeOnDestroy","parentNode","removeChild","directEvents","oppositeEvents","push","evt","usedByTooltip","_scheduleShow","delay","addEventListener","_scheduleHide","closeOnClickOutside","e","popper","contains","target","computedDelay","show","_showTimeout","setTimeout","_show","hide","clearTimeout","body","type","isSet","_setTooltipNodeEvent","_clearTitleContent","lastTitle","dispose","_dispose","toggle","updateTitleContent","_updateTitleContent","relatedreference","toElement","relatedTarget","callback","evt2","relatedreference2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;AAOA,AAAe,SAASA,UAAT,CAAoBC,eAApB,EAAqC;QAC5CC,UAAU,EAAhB;SAEED,mBACAC,QAAQC,QAAR,CAAiBC,IAAjB,CAAsBH,eAAtB,MAA2C,mBAF7C;;;;;;;;;;;;;;;;;ACNF,MAAMI,kBAAkB;aACX,KADW;SAEf,CAFe;QAGhB,KAHgB;aAIX,KAJW;SAKf,EALe;YAOpB,8GAPoB;WAQb,aARa;UASd,CATc;iBAUP,iCAVO;iBAWP;CAXjB;;AAcA,AAAe,MAAMC,OAAN,CAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cAoCfC,SAAZ,EAAuBC,OAAvB,EAAgC;;;;2BAEfH,eAAf,EAAmCG,OAAnC;;cAEUC,MAAV,KAAqBF,YAAYA,UAAU,CAAV,CAAjC;;;SAGKA,SAAL,GAAiBA,SAAjB;SACKC,OAAL,GAAeA,OAAf;;;UAGME,SACJ,OAAOF,QAAQG,OAAf,KAA2B,QAA3B,GACIH,QAAQG,OAAR,CACGC,KADH,CACS,GADT,EAEGC,MAFH,CAGIF,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4BG,OAA5B,CAAoCH,OAApC,MAAiD,CAAC,CAHjE,CADJ,GAMI,EAPN;;;SAUKI,OAAL,GAAe,KAAf;SACKC,cAAL,GAAsB,EAAtB;;;SAGKC,kBAAL,CAAwBV,SAAxB,EAAmCG,MAAnC,EAA2CF,OAA3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAkEMD,SAAR,EAAmBW,QAAnB,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+C;;UAEvCC,mBAAmBC,OAAOC,QAAP,CAAgBC,aAAhB,CAA8B,KAA9B,CAAzB;qBACiBC,SAAjB,GAA6BP,SAASQ,IAAT,EAA7B;UACMC,cAAcN,iBAAiBO,UAAjB,CAA4B,CAA5B,CAApB;;;gBAGYC,EAAZ,GAAkB,WAAUC,KAAKC,MAAL,GACzB5B,QADyB,CAChB,EADgB,EAEzB6B,MAFyB,CAElB,CAFkB,EAEf,EAFe,CAEX,EAFjB;;;gBAKYC,YAAZ,CAAyB,aAAzB,EAAwC,OAAxC;;;UAGMC,YAAYb,iBAAiBc,aAAjB,CAA+B,KAAK3B,OAAL,CAAa4B,aAA5C,CAAlB;SACKC,gBAAL,CAAsB9B,SAAtB,EAAiCY,KAAjC,EAAwCC,SAAxC,EAAmDc,SAAnD;;;WAGOP,WAAP;;;mBAGepB,SAAjB,EAA4BY,KAA5B,EAAmCC,SAAnC,EAA8Cc,SAA9C,EAAyD;QACnDf,MAAMmB,QAAN,KAAmB,CAAnB,IAAwBnB,MAAMmB,QAAN,KAAmB,EAA/C,EAAmD;;mBAEpCJ,UAAUK,WAAV,CAAsBpB,KAAtB,CAAb;KAFF,MAGO,IAAInB,WAAWmB,KAAX,CAAJ,EAAuB;;;WAGvBkB,gBAAL,CAAsB9B,SAAtB,EAAiCY,MAAMf,IAAN,CAAWG,SAAX,CAAjC,EAAwDa,SAAxD,EAAmEc,SAAnE;KAHK,MAIA;;kBAEQA,UAAUT,SAAV,GAAsBN,KAAnC,GAA6Ce,UAAUM,WAAV,GAAwBrB,KAArE;;;;QAIEZ,SAAN,EAAiBC,OAAjB,EAA0B;;;QAGpB,KAAKO,OAAL,IAAgB,CAAC,KAAK0B,UAA1B,EAAsC;aAC7B,IAAP;;SAEG1B,OAAL,GAAe,IAAf;;;QAGI,KAAK2B,YAAT,EAAuB;WAChBA,YAAL,CAAkBC,KAAlB,CAAwBC,UAAxB,GAAqC,SAArC;WACKF,YAAL,CAAkBT,YAAlB,CAA+B,aAA/B,EAA8C,OAA9C;WACKY,cAAL,CAAoBC,MAApB;aACO,IAAP;;;;UAII3B,QAAQZ,UAAUwC,YAAV,CAAuB,OAAvB,KAAmCvC,QAAQW,KAAzD;;;QAGI,CAACA,KAAL,EAAY;aACH,IAAP;;;;UAIIQ,cAAc,KAAKqB,OAAL,CAClBzC,SADkB,EAElBC,QAAQU,QAFU,EAGlBC,KAHkB,EAIlBX,QAAQyC,IAJU,CAApB;;;cAQUhB,YAAV,CAAuB,kBAAvB,EAA2CN,YAAYE,EAAvD;;;UAGMqB,YAAY,KAAKC,cAAL,CAAoB3C,QAAQ0C,SAA5B,EAAuC3C,SAAvC,CAAlB;;SAEK6C,OAAL,CAAazB,WAAb,EAA0BuB,SAA1B;;SAEKlC,cAAL,gBACKR,QAAQ6C,aADb;iBAEa7C,QAAQ8C;;;SAGhBtC,cAAL,CAAoBuC,SAApB,gBACK,KAAKvC,cAAL,CAAoBuC,SADzB;0BAGQ,KAAKvC,cAAL,CAAoBuC,SAApB,IAAiC,KAAKvC,cAAL,CAAoBuC,SAApB,CAA8BC,KADrE;iBAEWhD,QAAQiD;QAJrB;2BAOQ,KAAKzC,cAAL,CAAoBuC,SAApB,IAAiC,KAAKvC,cAAL,CAAoBuC,SAApB,CAA8BG,MADrE;gBAEUlD,QAAQkD,MAAR,IACN,KAAK1C,cAAL,CAAoBuC,SAApB,IAAiC,KAAKvC,cAAL,CAAoBuC,SAApB,CAA8BG,MAA/D,IAAyE,KAAK1C,cAAL,CAAoBuC,SAApB,CAA8BG,MAA9B,CAAqCA,MADxG,IAENlD,QAAQkD;;;;QAIVlD,QAAQmD,iBAAZ,EAA+B;WACxB3C,cAAL,CAAoBuC,SAApB,CAA8BK,eAA9B,GAAgD;2BAC3BpD,QAAQmD;OAD7B;;;SAKGd,cAAL,GAAsB,IAAIgB,MAAJ,CACpBtD,SADoB,EAEpBoB,WAFoB,EAGpB,KAAKX,cAHe,CAAtB;;SAMK0B,YAAL,GAAoBf,WAApB;;WAEO,IAAP;;;gCAG4B;;QAExB,CAAC,KAAKZ,OAAV,EAAmB;aACV,IAAP;;;SAGGA,OAAL,GAAe,KAAf;;;SAGK2B,YAAL,CAAkBC,KAAlB,CAAwBC,UAAxB,GAAqC,QAArC;SACKF,YAAL,CAAkBT,YAAlB,CAA+B,aAA/B,EAA8C,MAA9C;;WAEO,IAAP;;;aAGS;;SAEJ6B,OAAL,CAAaC,OAAb,CAAqB,CAAC,EAAEC,IAAF,EAAQC,KAAR,EAAD,KAAqB;WACnC1D,SAAL,CAAe2D,mBAAf,CAAmCD,KAAnC,EAA0CD,IAA1C;KADF;SAGKF,OAAL,GAAe,EAAf;;QAEI,KAAKpB,YAAT,EAAuB;WAChByB,KAAL;;;WAGKtB,cAAL,CAAoBuB,OAApB;;;UAGI,CAAC,KAAKvB,cAAL,CAAoBrC,OAApB,CAA4B6D,eAAjC,EAAkD;aAC3C3B,YAAL,CAAkB4B,UAAlB,CAA6BC,WAA7B,CAAyC,KAAK7B,YAA9C;aACKA,YAAL,GAAoB,IAApB;;;WAGG,IAAP;;;iBAGaQ,SAAf,EAA0B3C,SAA1B,EAAqC;;QAE/B,OAAO2C,SAAP,KAAqB,QAAzB,EAAmC;kBACrB5B,OAAOC,QAAP,CAAgBY,aAAhB,CAA8Be,SAA9B,CAAZ;KADF,MAEO,IAAIA,cAAc,KAAlB,EAAyB;;kBAElB3C,UAAU+D,UAAtB;;WAEKpB,SAAP;;;;;;;;;;UAUMvB,WAAR,EAAqBuB,SAArB,EAAgC;cACpBX,WAAV,CAAsBZ,WAAtB;;;qBAGiBpB,SAAnB,EAA8BG,MAA9B,EAAsCF,OAAtC,EAA+C;UACvCgE,eAAe,EAArB;UACMC,iBAAiB,EAAvB;;WAEOV,OAAP,CAAeE,SAAS;cACdA,KAAR;aACO,OAAL;uBACeS,IAAb,CAAkB,YAAlB;yBACeA,IAAf,CAAoB,YAApB;;aAEG,OAAL;uBACeA,IAAb,CAAkB,OAAlB;yBACeA,IAAf,CAAoB,MAApB;;aAEG,OAAL;uBACeA,IAAb,CAAkB,OAAlB;yBACeA,IAAf,CAAoB,OAApB;;;KAZN;;;iBAkBaX,OAAb,CAAqBE,SAAS;YACtBD,OAAOW,OAAO;YACd,KAAKlC,UAAL,KAAoB,IAAxB,EAA8B;;;YAG1BmC,aAAJ,GAAoB,IAApB;aACKC,aAAL,CAAmBtE,SAAnB,EAA8BC,QAAQsE,KAAtC,EAA6CtE,OAA7C,EAAsDmE,GAAtD;OALF;WAOKb,OAAL,CAAaY,IAAb,CAAkB,EAAET,KAAF,EAASD,IAAT,EAAlB;gBACUe,gBAAV,CAA2Bd,KAA3B,EAAkCD,IAAlC;KATF;;;mBAaeD,OAAf,CAAuBE,SAAS;YACxBD,OAAOW,OAAO;YACdA,IAAIC,aAAJ,KAAsB,IAA1B,EAAgC;;;aAG3BI,aAAL,CAAmBzE,SAAnB,EAA8BC,QAAQsE,KAAtC,EAA6CtE,OAA7C,EAAsDmE,GAAtD;OAJF;WAMKb,OAAL,CAAaY,IAAb,CAAkB,EAAET,KAAF,EAASD,IAAT,EAAlB;gBACUe,gBAAV,CAA2Bd,KAA3B,EAAkCD,IAAlC;UACIC,UAAU,OAAV,IAAqBzD,QAAQyE,mBAAjC,EAAsD;iBAC3CF,gBAAT,CAA0B,WAA1B,EAAuCG,KAAK;cACtC,CAAC,KAAKzC,UAAV,EAAsB;;;gBAGhB0C,SAAS,KAAKtC,cAAL,CAAoBsC,MAAnC;cACI5E,UAAU6E,QAAV,CAAmBF,EAAEG,MAArB,KACAF,OAAOC,QAAP,CAAgBF,EAAEG,MAAlB,CADJ,EAC+B;;;eAG1BH,CAAL;SATF,EAUG,IAVH;;KAVJ;;;gBAyBY3E,SAAd,EAAyBuE,KAAzB,EAAgCtE,OAAhC,aAAoD;SAC7CiC,UAAL,GAAkB,IAAlB;;UAEM6C,gBAAiBR,SAASA,MAAMS,IAAhB,IAAyBT,KAAzB,IAAkC,CAAxD;SACKU,YAAL,GAAoBlE,OAAOmE,UAAP,CAClB,MAAM,KAAKC,KAAL,CAAWnF,SAAX,EAAsBC,OAAtB,CADY,EAElB8E,aAFkB,CAApB;;;gBAMY/E,SAAd,EAAyBuE,KAAzB,EAAgCtE,OAAhC,EAAyCmE,GAAzC,EAA8C;SACvClC,UAAL,GAAkB,KAAlB;;UAEM6C,gBAAiBR,SAASA,MAAMa,IAAhB,IAAyBb,KAAzB,IAAkC,CAAxD;WACOc,YAAP,CAAoB,KAAKJ,YAAzB;WACOC,UAAP,CAAkB,MAAM;UAClB,KAAK1E,OAAL,KAAiB,KAArB,EAA4B;;;UAGxB,CAACQ,SAASsE,IAAT,CAAcT,QAAd,CAAuB,KAAK1C,YAA5B,CAAL,EAAgD;;;;;;UAM5CiC,IAAImB,IAAJ,KAAa,YAAjB,EAA+B;cACvBC,QAAQ,KAAKC,oBAAL,CAA0BrB,GAA1B,EAA+BpE,SAA/B,EAA0CuE,KAA1C,EAAiDtE,OAAjD,CAAd;;;;YAIIuF,KAAJ,EAAW;;;;;WAKR5B,KAAL,CAAW5D,SAAX,EAAsBC,OAAtB;KApBF,EAqBG8E,aArBH;;;sBAmDkBnE,KAApB,EAA2B;QACtB,OAAO,KAAKuB,YAAZ,KAA6B,WAAhC,EAA6C;UACxC,OAAO,KAAKlC,OAAL,CAAaW,KAApB,KAA8B,WAAjC,EAA8C;aACvCX,OAAL,CAAaW,KAAb,GAAqBA,KAArB;;;;UAIEe,YAAY,KAAKQ,YAAL,CAAkBP,aAAlB,CAAgC,KAAK3B,OAAL,CAAa4B,aAA7C,CAAlB;SACK6D,kBAAL,CAAwB/D,SAAxB,EAAmC,KAAK1B,OAAL,CAAayC,IAAhD,EAAsD,KAAK1C,SAAL,CAAewC,YAAf,CAA4B,OAA5B,KAAwC,KAAKvC,OAAL,CAAaW,KAA3G;SACKkB,gBAAL,CAAsB,KAAK9B,SAA3B,EAAsCY,KAAtC,EAA6C,KAAKX,OAAL,CAAayC,IAA1D,EAAgEf,SAAhE;SACK1B,OAAL,CAAaW,KAAb,GAAqBA,KAArB;SACK0B,cAAL,CAAoBC,MAApB;;;qBAGiBZ,SAAnB,EAA8Bd,SAA9B,EAAyC8E,SAAzC,EAAoD;QAC/CA,UAAU5D,QAAV,KAAuB,CAAvB,IAA4B4D,UAAU5D,QAAV,KAAuB,EAAtD,EAA0D;mBAC3CJ,UAAUqC,WAAV,CAAsB2B,SAAtB,CAAb;KADF,MAEO;kBACOhE,UAAUT,SAAV,GAAsB,EAAlC,GAAuCS,UAAUM,WAAV,GAAwB,EAA/D;;;;;;;;;;;;;;OAhXJ+C,OAAO,MAAM,KAAKG,KAAL,CAAW,KAAKnF,SAAhB,EAA2B,KAAKC,OAAhC;;OAObmF,OAAO,MAAM,KAAKxB,KAAL;;OAObgC,UAAU,MAAM,KAAKC,QAAL;;OAOhBC,SAAS,MAAM;QACT,KAAKtF,OAAT,EAAkB;aACT,KAAK4E,IAAL,EAAP;KADF,MAEO;aACE,KAAKJ,IAAL,EAAP;;;;OAUJe,qBAAsBnF,KAAD,IAAW,KAAKoF,mBAAL,CAAyBpF,KAAzB;;OAMhC2C,UAAU;;OA0RVkC,uBAAuB,CAACrB,GAAD,EAAMpE,SAAN,EAAiBuE,KAAjB,EAAwBtE,OAAxB,KAAoC;UACnDgG,mBACJ7B,IAAI6B,gBAAJ,IAAwB7B,IAAI8B,SAA5B,IAAyC9B,IAAI+B,aAD/C;;UAGMC,WAAWC,QAAQ;YACjBC,oBACJD,KAAKJ,gBAAL,IAAyBI,KAAKH,SAA9B,IAA2CG,KAAKF,aADlD;;;WAIKhE,YAAL,CAAkBwB,mBAAlB,CAAsCS,IAAImB,IAA1C,EAAgDa,QAAhD;;;UAGI,CAACpG,UAAU6E,QAAV,CAAmByB,iBAAnB,CAAL,EAA4C;;aAErC7B,aAAL,CAAmBzE,SAAnB,EAA8BC,QAAQsE,KAAtC,EAA6CtE,OAA7C,EAAsDoG,IAAtD;;KAVJ;;QAcI,KAAKlE,YAAL,CAAkB0C,QAAlB,CAA2BoB,gBAA3B,CAAJ,EAAkD;;WAE3C9D,YAAL,CAAkBqC,gBAAlB,CAAmCJ,IAAImB,IAAvC,EAA6Ca,QAA7C;aACO,IAAP;;;WAGK,KAAP;;;;;;"}